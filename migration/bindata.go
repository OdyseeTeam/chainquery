// Code generated by go-bindata. DO NOT EDIT.
// sources:
// migration/000_init_schema.sql (15.243kB)
// migration/001_supports.sql (1.128kB)
// migration/002_decimals.sql (216B)
// migration/003_dht_tracking.sql (2.061kB)
// migration/004_new_indices.sql (961B)
// migration/005_remove_foreign_keys.sql (760B)
// migration/006_add_height_index.sql (126B)
// migration/007_more_decimals.sql (92B)
// migration/008_schema_fix.sql (3.655kB)
// migration/009_certificate_validation.sql (580B)
// migration/010_triggers.sql (1.886kB)
// migration/011_add_license.sql (386B)
// migration/012_store_last_height.sql (113B)
// migration/013_add_input_vin.sql (304B)
// migration/014_yay_new_metadata.sql (3.895kB)
// migration/015_adjust_column_sizes.sql (472B)
// migration/016_transaction_hashes_adjustment.sql (376B)
// migration/017_claim_owner.sql (445B)
// migration/018_cert_sync_index.sql (146B)
// migration/019_raw_tx.sql (147B)
// migration/020_content_type.sql (199B)
// migration/021_claim_reference.sql (211B)
// migration/022_align_claim_id.sql (2.149kB)
// migration/023_sdhash_index.sql (110B)
// migration/024_claims_in_channel.sql (230B)
// migration/025_outputindices.sql (178B)
// migration/026_purchases.sql (1.137kB)
// migration/027_signed_supports.sql (325B)
// migration/028_liscense_url.sql (202B)
// migration/029_support_index.sql (130B)
// migration/030_json_field.sql (117B)
// migration/031_drop_unused_columns.sql (1.402kB)

package migration

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migration000_init_schemaSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5b\x73\xdb\xb8\x15\x7e\xf7\xaf\xc0\xec\xcb\x52\x53\x79\xc6\xf2\x26\xdb\x74\x3a\x79\xa0\x29\x3a\xe1\x46\xa2\x5c\x91\x4a\x93\xbe\x40\x10\x09\x49\xa8\x25\x90\x21\xc0\xd8\xee\xaf\xef\x10\xe0\x05\xbc\x49\x94\xcc\x74\x63\x4f\x1f\x6d\x7c\xc4\xf5\x9c\xef\x7c\x07\x07\xba\xbc\x04\x7f\xd9\x93\x4d\x84\x38\x06\x8b\xf0\xe2\x42\xfd\xdb\xe1\x88\xe3\x3d\xa6\xfc\x06\x6f\x08\xbd\x30\xe6\xa6\xee\x9a\xc0\x31\x3e\x9a\x53\x1d\x58\xb7\xc0\x9e\xb9\xc0\xfc\x62\x39\xae\x03\x96\xde\x16\x11\xfa\x2d\xc6\xd1\xd3\x12\x8c\xcd\x5b\x7d\x31\x71\x81\xf1\x51\x9f\xeb\x86\x6b\xce\x81\x63\xba\x60\x87\x38\xa1\x23\x60\xcc\x26\x93\xa4\x1b\xf9\x27\xdc\x60\x8a\x23\xb4\x83\x1e\x01\x7f\x6f\x1e\xdc\xa4\x7e\x97\x69\xb9\xfa\xcd\xc4\xac\xce\x6a\xb5\x0b\xbc\xfb\xe5\x85\x76\x01\x00\x00\x4b\xe2\x2f\x81\x63\xce\x2d\x7d\x32\xbc\x90\xff\x59\x11\xce\x96\xe0\xb3\x3e\x4f\xa6\xaa\x5d\x5f\x0d\xc4\xd7\xf6\x62\x32\x19\x4a\x80\x58\xd6\x43\x10\xdd\x17\xa8\xbf\x5e\x0d\x4e\x5d\x59\xb5\xd3\x80\xae\x49\xb4\x47\x9c\x04\x94\x2d\x81\x65\xbb\xe6\x07\x73\x0e\x16\xb6\x63\x7d\xb0\xcd\x71\x15\xee\x93\xf5\x9a\x78\xf1\x8e\x27\x5b\x3b\x5b\xdc\x4c\x4c\x6d\xf4\x6e\xf8\xae\x36\xd7\x2d\x62\xdb\x5e\xa6\x09\xb2\x0e\x31\xd9\x6c\xf9\x12\xdc\x58\x1f\x2c\xdb\x6d\x9d\xdf\x1e\xfb\x04\x51\xc8\xc9\x1e\x77\xc0\x46\xf7\x3b\x0c\xa3\x20\xe0\x7d\xee\x28\x45\x7b\x0c\xbd\x1d\x22\xfb\xfe\xbb\x0e\xa8\x77\x7c\x5d\x61\x84\xbf\x93\x20\x66\x50\x58\x1c\x7c\xee\x51\x64\x63\xe3\x47\xde\x6f\x8f\xb2\x33\x46\xfe\x73\x7c\x49\x1c\x45\x1b\xdc\xeb\x56\xca\xc1\x3b\xd9\xc9\x77\x1c\x31\x12\xd0\xae\x38\xb8\xc5\x8f\xc5\x4c\x47\xcf\x9e\x29\x8f\x10\x65\xc8\xe3\xa2\x6b\xc4\xb6\x98\x2d\x81\x6b\x7e\x71\xeb\xcd\x0c\x86\x51\xe0\x61\xc6\xb0\xbf\x04\xae\x65\x7f\xb5\x6c\x57\x1b\x0d\x72\x0e\xbc\x52\xba\x4e\xbd\x3f\xc2\x88\x27\xe8\xb1\xee\x9a\xae\x35\x35\x0b\xbf\xcb\x89\x73\x31\x9f\x9b\xb6\x0b\x93\x56\xc7\xd5\xa7\x77\x99\xf7\x04\x3e\x59\x93\x13\xbf\x05\x33\x1b\x2c\xee\x92\x0f\x9a\xfa\x15\x1d\xdf\xcd\xad\xa9\x3e\xff\x0a\x3e\x99\x5f\xc1\xf2\xee\x13\xbc\x11\xb4\x09\xb4\x84\x31\x07\x72\xec\x85\x6d\xfd\x63\x61\x4a\x84\xe5\x3f\x4a\xc8\x47\x61\x94\x9a\x64\x9e\x14\x68\xd9\x63\xf3\x8b\x8a\x49\x49\x44\xcb\xe8\xa4\x05\xe7\x0a\xb3\xd0\x54\x23\xa9\x23\xa7\x82\x6a\x32\xa8\x4a\x3c\x75\xec\x5d\xea\x92\xa5\x99\x36\xf9\x69\xcb\x84\x8c\xec\x9c\xb4\xfc\xc8\x5a\x90\xd3\xfc\x58\xb4\xe2\x88\x06\x17\x03\x60\xda\x1f\x2c\xdb\x7c\x6f\x51\x1a\x8c\x6f\x4a\x61\xd1\x31\xdd\xf7\x31\x5f\xbf\xdb\xaf\xde\xe4\x56\x99\xfe\x0d\x63\x4a\xbc\xc0\xc7\x89\x59\xce\x67\xff\x84\xb7\xb3\xf9\x54\x77\xdf\x1b\xb3\xe9\xdd\xdc\x74\x1c\x73\x9c\x1c\x02\xbc\x99\xcc\x8c\x4f\xd0\xb1\xfe\x65\xbe\x7f\xf3\x03\x02\xa7\x62\xe1\x8d\xe1\x53\xf1\xe7\xd5\x93\xd8\x46\x98\x34\x3f\x9b\x9f\x08\x0d\x63\x0e\xbd\x20\xa6\xfc\x78\x60\x0c\x62\x7e\x02\xfa\x3b\xda\xc5\xf8\x70\x04\x5d\xe3\x2a\xa0\xc9\x8d\x6b\x0c\xd1\xc8\x68\x0d\xb8\x4e\xb4\xdb\x5b\x14\xaf\x32\x69\xb6\x3f\x95\x76\x85\x93\x8f\xed\x60\x84\x1e\x4a\x34\xf8\x73\x31\x99\x3a\xa5\x74\x41\x27\xcf\xab\x4a\x84\xae\xe2\x06\x25\x3a\xbc\x9d\xcd\x4d\xeb\x83\x2d\x81\xb7\x25\x60\x89\x6f\x6a\x2e\x32\x00\x73\xf3\xd6\x9c\x9b\xb6\x61\xe6\xfa\x34\x67\xd0\x64\x81\x63\x73\x62\x26\x0b\xd4\x1d\x43\x1f\x9b\xca\x92\xed\x19\xd0\x0d\xd7\x9a\xd9\xa0\x99\x91\x95\x29\x1c\xe1\x65\x05\x99\x51\x69\xcd\x9c\x0f\x7e\x95\x52\x63\xf6\x71\x69\xd3\xbb\x7c\x78\x98\x53\x15\xfc\x2b\x64\x56\xe4\xfb\x11\x66\xac\x9d\x55\x33\x40\xce\x01\x6f\x4e\xe7\x80\xd4\x36\xaa\xf4\x46\x22\xc6\x21\xc3\x98\x16\xae\x91\x8b\xbd\x4d\x31\xe0\x6f\x57\x83\xb4\x87\xa2\x15\xc6\xd1\x4e\xcd\x94\xae\x06\x3f\x2d\x09\x54\x9d\x58\xcf\x36\xf4\x90\x9e\x49\x41\x0a\x36\x3b\x87\xcc\x40\xa9\x8f\x1f\x4b\x58\x37\xd9\x33\x4d\x6c\x5d\xdd\x88\x53\x4c\x27\x83\x4f\xb1\xaf\xd0\xd8\x45\x38\x6f\x37\x75\x95\x75\x92\xc6\x63\x19\x49\x45\x95\xf7\x19\x26\xa5\xf0\x48\xcf\xbc\x69\x32\x19\x8e\x41\x2f\x20\x74\x85\x18\x3e\xaa\xf7\xd3\x64\x3f\x43\x3f\x5b\x1c\x25\xe2\x35\x88\x79\x5f\xb9\x60\xd6\x1d\xad\x47\xfe\x0a\x82\x85\x98\xfa\x30\x0e\x7d\x69\xcb\x5d\x96\xcd\xf0\xb7\x18\x8b\xcc\xf9\x0c\x5d\x96\xf5\xe1\x45\x24\xe4\x90\x91\x0d\x44\x6c\x2f\xa5\xc7\x79\x4b\x55\x7a\x12\x99\xe2\x59\x3d\xbd\x14\xbe\xb3\x84\xd3\x1d\x94\x2b\x02\xa2\xf2\x62\xd5\xfa\xcb\x32\x05\x95\x19\xb4\x9b\x4c\x39\x30\x72\x45\x56\x55\x68\xa0\x3c\x36\xaf\x4b\xb0\x53\xc6\x57\x68\x56\x0c\xfd\x59\x5a\x9b\x96\x9a\x5d\x73\xda\x18\xc4\x5c\x4d\x18\x73\x9f\xab\xa3\x45\x9f\x9d\x48\x5e\x20\x9b\x29\xbe\x19\xdb\xa0\xe7\x6a\x04\xf8\x0a\xa2\x03\xac\x09\x22\xf1\xdf\x0e\xe1\xe0\x00\x59\x57\xa0\x8d\x1e\x52\x33\x7f\xe2\x2f\x87\xa5\x5e\x9b\x9c\x27\x3f\x9e\x4c\x2a\x60\x56\xf8\x5b\xd6\x4d\xd9\x82\x89\xea\x8f\x67\xfb\x4e\xc3\xc0\x75\xb1\xd2\x93\xeb\xbe\x68\xab\x92\xb7\x02\x2f\x42\x74\xb4\x87\xbe\x84\x73\x8e\x87\x4e\xfe\x14\xe2\x72\xf9\xe2\x39\xd1\x31\x8c\x57\xf0\x1e\x3f\xf5\x14\x6b\xb3\xde\xce\x8f\xb7\xf2\xce\x01\x7f\x8b\x49\x84\xfd\x24\x76\x53\xc4\xe3\x08\x37\x54\x4c\x94\xab\x93\xd1\xef\x57\xc5\x8e\xbc\x3d\x77\x47\x32\x77\xda\x11\xc6\x9f\x33\x7b\xc2\x84\x76\xe2\x1d\x35\x53\x02\x85\xab\x27\xd8\x4a\x81\x2f\x26\xe7\x9a\x49\x27\x6c\x4d\xb9\x16\x2a\xa4\xe6\x62\x43\x69\xff\x2d\xe2\x45\x7e\xf8\x3f\xd4\x10\xcd\x13\x70\x92\xd3\xba\x79\xca\xd9\xbf\x7e\x7a\x3d\x85\x01\x63\x66\x3b\xee\x5c\x4f\xec\x60\x69\x50\x0e\x73\xfe\xff\x8c\x76\xc4\xff\x83\x25\x8b\x32\x3e\x9a\xc6\x27\xad\x62\xb7\x96\x23\xcf\x75\x36\x07\x7f\x38\x33\x1b\x7e\xd6\x27\xd6\xb8\x02\x1a\xd4\xd5\x87\x5c\xde\x51\xa1\x34\x8b\xc3\x80\x50\xb1\x22\x71\x5a\xc3\x06\x79\x02\x8c\xd9\x74\x6a\xda\x2e\xf8\x95\x62\xec\x63\x1f\xac\x83\x08\x44\x78\x8d\xa3\x24\x37\x60\x80\x50\xc0\xb7\x84\x01\x2f\xd8\xc5\x7b\x0a\x82\xc8\xc7\xd1\xaf\xf5\xfc\xd8\x99\x2e\x81\x56\x67\x29\xed\xfa\xed\xdb\x41\x7d\x0c\x42\x81\x87\x18\x66\xe0\x61\x8b\x23\x0c\xf8\x16\x03\xdd\x99\x82\xa4\x95\x01\x1e\x80\x15\x06\x21\x8a\x18\xf6\xc1\x03\xe1\x5b\xc0\x42\x8c\xfd\xfa\xa0\xb3\x38\xe4\x1d\xa5\x9d\xdc\xb0\x57\x98\xbe\xa7\x17\xec\x55\x85\x96\xfe\xfb\x87\x4a\x34\xb9\xa7\x8a\xc2\x29\x06\xed\x26\xd2\x64\x07\x85\x58\x2a\xe8\xa6\xe8\xa9\xec\xa0\x41\x89\xb3\x9e\x25\xd4\xaa\x83\xff\x5f\xa9\x1d\x29\x32\xd5\x6c\xec\x44\x95\xd6\xdd\xd0\x96\x3e\x5e\x11\x0e\xd1\x5e\x56\x8d\x8e\x54\x7b\x0a\x72\x71\xe2\x3d\x08\xd6\x82\x4d\x04\x93\x0b\x2a\x11\xe4\x95\x8e\x2d\xb8\x2d\x69\xe6\x8f\xbf\x16\x71\xda\x7f\xe6\x58\xd2\x28\xbb\x0c\xb6\x43\x1c\x33\x0e\xeb\x85\xa9\x3e\xab\x20\x8a\x21\x57\x4e\xa8\x9b\x57\x2a\x5d\x15\xde\xf1\x67\x85\xf2\xd6\x09\xfd\x30\x77\x3d\x54\xeb\x28\x86\x9f\x88\x93\x6c\xa8\xd2\xb4\x1d\xf1\xc1\x1a\x4a\xd1\xef\x38\xb1\xfc\xa4\x9f\x92\x0b\x74\xfc\xd8\x10\xb6\x9c\x06\x42\xc5\xaa\x5f\x76\x84\x13\x6f\x86\xba\xe5\x8a\xbd\xd6\xb9\xbb\xe5\x77\x14\xed\xb1\xfa\xac\xe5\xfa\x4d\xfd\x81\x9a\x78\xf4\x94\xcc\xe9\xdc\x5a\x51\x63\x87\x32\xb3\xcc\x92\x96\x6b\x65\x58\x70\x79\x09\x46\xe0\x12\x18\x38\xe2\x64\x4d\x3c\xc4\xb1\xfb\x14\xe2\x21\xb8\x06\x97\xc0\xe1\x11\x46\xfb\xe4\xef\xf4\x02\x39\x5e\xed\x08\xdb\xe2\xe8\x59\x33\xcc\x79\x51\x51\x8e\x08\x18\xc9\x44\xad\x54\xc4\x55\x66\x93\x71\x62\x31\x3e\x23\x9b\x72\xf9\xea\xbc\x73\xf3\x8a\x71\x4a\xa5\x70\xe6\x57\x2e\x07\x46\x67\x67\xe3\x5d\x5f\x16\xe4\x85\xfd\xfe\x9e\x3d\x09\xa9\x0f\x11\x93\x49\xfb\xd4\x1c\x5b\x8b\xa9\x48\x7e\xdb\x70\xff\x16\xc9\x47\x01\x2c\xda\x89\x0f\x11\x87\xd9\x0b\xc2\x63\x86\xde\x15\x87\xd7\x6b\xec\x71\xf2\x1d\x77\x8d\xa9\xe9\xad\xfd\xe5\x25\xd0\x7d\x9f\x24\x7b\x8a\x76\x60\x4d\xf0\xce\x97\x21\x14\x23\xf6\x04\x08\xf5\xf1\x23\xa1\x9b\x24\xe6\x32\x61\xc1\x20\xb1\x7f\x96\x4a\x8b\x98\x6f\x83\x48\xb9\x54\x18\x5d\x0f\x72\x29\x21\x93\x12\xd2\xb8\x0b\x5e\x40\x79\x92\x12\x96\x6f\x69\x46\xbf\x5f\x9f\xfb\x36\x86\x41\x0a\x19\x5c\xc3\x87\x6e\xd7\x09\x3b\x44\x37\x31\xda\xf4\x71\x43\xc4\xb7\xf1\x7e\x45\x11\xd9\xc9\x32\xb0\xfa\x14\x8e\xf0\x5d\xd9\x15\x4e\x78\x44\xb3\xc6\x18\x7a\x71\x94\xb8\xf4\x53\x4a\x0f\xbf\xe5\x85\xe5\xa4\xb1\x8f\x5a\x78\xb5\xd0\xc7\xe0\x9a\xec\x38\x8e\xba\x56\xb2\x56\xc4\x87\x8c\x0b\x87\x57\xf7\x31\xc3\xff\xa2\x7b\x1e\x0e\x39\xf6\x7f\xf9\xc9\x5f\xfa\x35\x29\x3b\xc1\xa1\x87\x4b\x45\x02\x72\x40\xa1\xb5\xbe\x6d\xa9\x28\xb5\x53\x5e\xb8\x1c\x98\xc9\x5d\xc6\xe8\xa2\x38\xa3\x86\x97\xf2\xe8\x5e\xb6\xb2\x3c\x40\x9e\x34\x76\xf5\x79\x80\x18\x7b\x41\xc9\xb7\xb8\xf6\x5c\x46\xd9\x80\x61\x1a\xd8\x87\x4a\x5c\x1e\x34\x5f\xe2\x88\x0e\x0d\x35\x9a\xa4\x57\x38\xa5\x08\xd3\x72\x83\xa3\x62\x06\x03\x11\x92\x95\x7f\x09\xf2\xaa\x6a\x3a\xa3\xbe\x1f\x35\xdd\x57\x3d\xea\x13\x1e\x07\xc9\xe5\x74\xb9\x2c\x11\xc8\x8e\x75\x30\x81\x15\xb7\x5c\x3a\x2f\xde\x91\x56\xa3\x4b\xcb\x77\x37\xc4\x77\xa4\xdb\x6a\x8a\x0f\xb7\x80\x6d\x24\x97\x2a\x14\x97\xbc\x57\x1a\x5e\x5c\x34\x42\xf5\x34\x1e\x68\x59\x64\xd0\x46\x7f\x1b\x35\x5c\xa3\xc9\x2d\x91\x31\xc0\x15\x21\x40\x2b\x87\x84\x96\x4f\x26\x39\x6d\x6b\x05\x85\xb7\x1d\x96\x64\x5f\x2d\xa5\x61\x39\x93\x17\x2d\xc8\x59\x1c\x86\x41\x74\xa0\x7c\x93\x02\xb0\x0f\x7b\x97\xbe\x69\xd7\xdd\xb5\xc5\xd9\xf1\xa1\xf7\xca\x52\xd7\xb4\xa2\x31\x0a\x64\x7b\xde\x1e\x07\xd6\xf7\x30\xdf\xf7\x9c\x59\x1b\x4e\xa2\x57\x0e\x56\x8c\x9d\x75\x71\xe4\xf2\x0c\x89\xdf\x36\xc7\xda\x87\xbc\x3d\xba\xb5\x94\xfd\xe5\x3e\x6b\xa5\x32\x85\xd2\x1c\xc4\x3c\xbf\x1b\x6f\x2d\x6e\xbc\x68\x37\x8d\xe9\x3d\x0d\x1e\x28\x3c\x92\x3f\x9f\x94\xc0\x16\x0a\xb9\xfe\x3b\x2c\xc2\xd2\xe7\x47\x1d\x35\x5b\x9f\xbf\x99\xf9\x33\xfc\xf4\xc4\x7b\xf6\x9e\x12\xb7\x2a\x31\xa4\xa7\xec\xd5\x55\x62\x55\xce\x88\x6a\x51\xbd\x1e\x55\x19\xaf\x45\xce\x94\x51\x83\x16\x21\xaa\x4e\x26\xf8\x61\x97\xf9\x8a\x17\x2f\xc4\x80\x52\x4b\xd4\xdf\x74\x17\xcc\xd0\xfc\x49\x63\xbd\xa1\x1d\xee\x3e\xbe\xd2\x47\x3e\x28\x0c\x77\x89\x2c\x15\x3f\x80\xe0\x88\xc7\x87\x9e\x3e\x87\x21\x54\x7f\xaf\x50\xbb\xba\x47\x1c\xe5\x80\x86\x76\x14\x92\x96\xe6\x46\xf3\x96\x21\x82\x88\x2a\xdd\x4f\xb0\xc1\xff\x0d\x00\x00\xff\xff\xad\x6e\x62\xd2\x8b\x3b\x00\x00")

func migration000_init_schemaSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration000_init_schemaSql,
		"migration/000_init_schema.sql",
	)
}

func migration000_init_schemaSql() (*asset, error) {
	bytes, err := migration000_init_schemaSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/000_init_schema.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5f, 0x4b, 0x1a, 0x3, 0x8e, 0xba, 0x9a, 0x89, 0x35, 0x62, 0x76, 0x32, 0x1, 0x38, 0x50, 0xde, 0x18, 0x98, 0x15, 0xec, 0x15, 0x1e, 0x88, 0xba, 0x46, 0x9, 0x79, 0xcf, 0xe2, 0x4b, 0x92, 0x90}}
	return a, nil
}

var _migration001_supportsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4f\x6f\xda\x30\x18\xc6\xef\xf9\x14\xef\xad\xa0\x15\x29\x48\x1c\xa6\x4d\x1c\x8c\xf3\xd2\x5a\x4d\x1c\x64\x3b\x5b\xd9\xc5\x09\xc1\xa0\xb4\x24\x41\xb1\x73\xd8\xb7\x9f\x1c\x10\x74\xd5\x36\x69\x55\x1b\xf9\x90\xd7\x7f\x9e\xe7\xe7\xc7\xef\x64\x02\x9f\xea\x6a\xdf\x15\xce\x40\x76\x0c\x82\x97\xb5\x74\x85\x33\xb5\x69\xdc\xc2\xec\xab\x26\x20\xb1\x42\x01\x8a\x2c\x62\x84\xb6\x77\xc7\xde\x01\x89\x22\xa0\x69\x9c\x25\x1c\xf2\xf2\x50\x54\xb5\xae\xb6\x39\xd0\x7b\x22\x46\xb3\x70\x3c\xfc\x10\xea\x4f\x49\x54\x70\x28\x5c\xd5\x4c\xfd\xfe\x98\x28\x3c\x97\x7a\x6f\x1a\xd3\x15\x07\x5d\x56\x5f\xff\x6c\x8e\xcd\xf6\x2d\x58\xcb\x54\x20\xbb\xe3\xf0\x80\x6b\xc8\x77\xcf\x7a\xc0\xcb\x61\x74\xe5\x1c\x83\xc0\x25\x0a\xe4\x14\xe5\x19\xff\xd5\x7a\xca\x21\xc2\x18\x15\x02\x25\x92\x92\x08\xfd\x4c\xb6\x8a\x3c\x3e\x4f\x81\x50\xc5\x52\xfe\x0e\xd8\xb6\x3f\x1e\xdb\xee\x55\x9c\x9d\x29\x9c\xd9\xe6\xe0\xdd\x14\x4b\xbc\xa3\x02\x9e\xc5\x31\x44\xb8\x24\x59\xac\x80\x66\x42\x20\x57\xda\xaf\x4a\x45\x92\xd5\x07\xa1\xd4\xed\xb6\xda\x55\xff\xc9\xf2\x22\xaa\xf7\xe2\xa4\x02\xbd\xdc\x09\x94\x2d\x07\x08\x7c\x64\x52\x49\xc8\x9f\xda\x8d\xb6\xae\x70\xbd\xcd\x83\x51\x00\xa7\x89\xa6\xa8\x4d\x0e\xc3\xf7\x8d\x88\x37\xb6\xe5\xe5\xae\xb7\x5e\xf6\x50\x58\xa7\xed\xcf\xa6\x3c\xe9\xfe\x3d\x90\x9b\x30\x0c\xa7\x93\x61\x40\x18\x7e\x19\xc6\xcd\x20\x51\x59\x6d\xfb\xb2\x34\xd6\x0e\x1a\x8a\xf1\x35\xe3\x6a\x34\x1d\x5f\xce\x86\xbf\x7b\x9a\xae\x6b\x3b\x5d\x1b\x6b\x8b\xbd\xc9\x41\xe1\xa3\xba\x0d\x02\x80\x95\x60\x09\x11\xeb\x53\x8b\x1f\x9f\xf5\x53\xbb\x39\x47\x00\xa3\xeb\xfd\xc7\x41\x30\x46\x7e\xc7\x38\xce\x59\xd3\xb4\xd1\xe2\xfa\x66\xf7\x44\x48\x54\xf3\xde\xed\x3e\xd7\x9b\xd9\x25\x82\x73\xad\xfb\xa6\x2a\xdb\xad\xf1\x19\x88\xf4\xbb\x5e\xa6\x22\x21\x6a\x4e\xd3\x64\x25\x50\x4a\x8c\xbc\xb1\x5e\xc4\x29\x7d\xd0\x92\xfd\xc0\xf9\xec\x1f\xef\xfa\x2b\x00\x00\xff\xff\x84\xc3\x3d\xac\x68\x04\x00\x00")

func migration001_supportsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration001_supportsSql,
		"migration/001_supports.sql",
	)
}

func migration001_supportsSql() (*asset, error) {
	bytes, err := migration001_supportsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/001_supports.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9f, 0x6a, 0x4, 0x29, 0x96, 0x63, 0xcc, 0xe3, 0x1a, 0x9e, 0xd1, 0xf8, 0x71, 0xc6, 0xb0, 0xb0, 0xd8, 0x48, 0xa1, 0x83, 0xe5, 0x88, 0x86, 0xb7, 0xd2, 0x6e, 0x21, 0x41, 0xbc, 0x7, 0x90, 0x67}}
	return a, nil
}

var _migration002_decimalsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8d\x41\xcb\x82\x40\x14\x45\xf7\xfe\x8a\xbb\x53\xf9\x3e\x63\x08\x02\xc1\xd5\xa8\x93\x09\xaf\x27\xd4\xbc\x75\x8a\x3c\x43\xc8\x8a\xb0\x7e\x7f\x1b\x77\x05\xdd\xc5\x5d\x9c\xc5\x39\x49\x82\xbf\x69\x3c\x3f\xba\x59\x21\xf7\xc0\x92\x77\x07\x78\x9b\x93\x43\x7f\xe9\xc6\x09\xc5\xce\x72\xe5\x50\x34\x24\x7b\x46\xab\xc3\xa0\xfd\x3c\xbe\xf4\xd4\x4d\xb7\xe7\x75\x6e\xbf\xa1\xbc\xae\x6a\xf6\xd1\xda\xc4\x10\x3e\xd6\x15\xbb\x12\xdc\x78\xb0\x10\xa1\x74\x5b\x2b\xe4\x61\x90\xfd\xce\x0d\xaa\xed\xf2\x65\x23\x39\xb9\x68\x93\xfe\xa7\xf1\xa7\x2d\x34\x2b\xb3\x2c\x44\x16\x04\xef\x00\x00\x00\xff\xff\xde\x43\xaf\xbd\xd8\x00\x00\x00")

func migration002_decimalsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration002_decimalsSql,
		"migration/002_decimals.sql",
	)
}

func migration002_decimalsSql() (*asset, error) {
	bytes, err := migration002_decimalsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/002_decimals.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0x1b, 0xaf, 0x56, 0xee, 0x44, 0x61, 0x37, 0xc1, 0xd2, 0xcf, 0xe3, 0xfa, 0x9f, 0xd6, 0x32, 0xea, 0x83, 0x55, 0x5a, 0xd4, 0xe0, 0xbe, 0x77, 0xb2, 0xf, 0xbd, 0xdc, 0x18, 0x22, 0xed, 0xc2}}
	return a, nil
}

var _migration003_dht_trackingSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\xcf\x6f\xdb\x20\x14\xc7\xef\xfc\x15\xef\x88\xb5\x56\x6a\xa5\xdd\x76\xa2\x0e\x55\x59\x1d\x5c\x01\x99\x92\x13\x66\x36\x4a\x51\x1c\x62\xc5\x68\xdb\x9f\x3f\xd9\x4e\x63\xe7\x87\x92\x66\x6b\xb4\xdd\xf2\xc8\x97\xf7\x78\x1f\xbe\x0f\xdf\xde\xc2\xa7\xa5\x9b\xaf\x4d\xb0\x30\xa9\xd0\x30\x94\xc1\x04\xbb\xb4\x3e\x3c\xd8\xb9\xf3\x28\x16\x94\x28\x0a\x8a\x3c\x24\x14\xd8\x23\xf0\x54\x01\x9d\x32\xa9\x24\x64\x79\x69\xdc\x52\xe7\xaf\x36\x5f\x54\x2b\xe7\x43\x86\x30\x02\xc8\x5c\x91\x81\xa4\x82\x91\xe4\xa6\x09\x3b\x55\xb3\x18\x3f\x11\x81\x3f\xdf\x45\xed\x0f\x12\x2b\x2a\x40\x52\x05\xa5\x09\xce\xdf\x43\x9c\x26\x49\x53\xaa\x0b\xf5\xdc\x7a\xbb\x36\xa5\xce\x5d\x5b\x93\x4f\x92\x4d\xba\xbe\x1c\x8c\x88\xa2\x8a\x8d\xe9\x56\x01\x23\xfa\x48\x26\x89\x82\x78\x22\x04\xe5\x4a\x37\xff\x4a\x45\xc6\x2f\xed\x5e\x57\x6b\xf3\xc3\xb8\xd2\x7c\x2f\x6d\x06\x8a\xf1\x19\xe3\x0a\xdf\x47\xbb\x15\x5e\xad\x29\xde\xa3\xab\xf5\x79\x19\x02\x78\x11\x6c\x4c\xc4\x0c\x9e\xe9\x0c\xb2\x6a\xa1\x0f\xa8\x01\x6e\x90\x45\x4d\x4e\xc6\x47\x74\xda\x10\xfc\xa5\x7b\x6c\xb8\x47\x78\x20\xda\xc9\x32\x88\xf6\x85\xbb\x9d\xe3\x5d\x12\x11\x8a\xbe\x1c\xf7\x00\xf5\x05\xfa\x53\x77\x54\xd6\xae\x37\x8e\xf0\xab\xc2\xf6\x0e\xb8\xbf\xfb\x4b\x0b\x2c\xfc\xea\xa7\xd7\x4e\x57\xba\x74\x75\xc8\x40\xd1\xa9\xba\x30\xe1\xd1\x9b\xe9\x60\xbf\x1d\xb6\x45\x18\xa7\x5c\x2a\x41\x18\x57\x90\xe5\x3e\xe8\xfd\xd2\xf1\x13\x8d\x9f\xf1\xc1\x89\x98\xec\xec\x98\x0a\xf8\x2a\x53\xae\xbf\x91\x84\x8d\x0e\x64\xd1\xf5\xc0\x77\xf6\xd9\xe0\x6f\x17\x3e\x0e\xff\x47\x0f\xf4\xda\x9a\x60\x8b\xcb\xa7\xb9\x34\x75\xd0\xb5\xb5\xfe\xc2\xad\x47\x6e\x7e\x80\x0c\xf0\x96\xd7\xcd\x89\xc1\x7b\xd7\x74\xbe\x75\x86\xb7\x4d\xee\x4b\x06\x3d\xe0\x41\x43\x11\xba\xb2\x33\xce\xbe\xda\xff\xb9\x67\xae\xfb\x11\x38\xe9\x90\xf3\x4f\xf7\x96\x5d\x6f\xa5\x7f\xfa\xba\x9f\xf6\x12\xfa\x1d\x00\x00\xff\xff\x70\xd5\x5a\x52\x0d\x08\x00\x00")

func migration003_dht_trackingSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration003_dht_trackingSql,
		"migration/003_dht_tracking.sql",
	)
}

func migration003_dht_trackingSql() (*asset, error) {
	bytes, err := migration003_dht_trackingSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/003_dht_tracking.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5c, 0x27, 0x7c, 0x37, 0x48, 0x4, 0x7, 0xf5, 0x47, 0x6e, 0xc9, 0xf5, 0x99, 0xaf, 0xb3, 0xc, 0x0, 0xed, 0xa0, 0xec, 0x60, 0x16, 0x32, 0xd7, 0x99, 0x6d, 0xdf, 0x86, 0xaa, 0xb5, 0xda, 0x67}}
	return a, nil
}

var _migration004_new_indicesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xbf\x6e\xc2\x30\x10\x87\x77\x9e\xe2\x36\x40\x2d\x52\x2b\x75\xeb\x64\x12\xa3\x22\x99\x44\x22\x4e\xd5\xcd\x36\x89\x49\x5c\x11\x1b\xc5\x97\xfe\x79\xfb\x2a\x21\xa8\x20\x68\xd5\xa1\xd9\xee\x2e\x39\x7f\xfa\x4e\xbf\xd9\x0c\x6e\x2a\x53\xd4\x0a\x35\xa4\xfb\xd1\xe8\xb4\x4f\x50\xa1\xae\xb4\xc5\xb9\x2e\x8c\x1d\x11\xc6\xe9\x1a\x38\x99\x33\x0a\xd2\x35\xb8\x6f\x50\x02\x09\x43\x58\x46\x21\x7d\x01\xb9\xcc\x3f\xc4\xd2\x27\x7b\x6d\x51\xc2\x44\x1a\x2f\xfc\xa1\x26\x49\x30\x7d\xbc\xfe\x32\xb5\xf9\xdf\x99\xd9\x4e\x99\xea\x02\xb9\xd0\x9a\xe4\x79\xad\xbd\x6f\xa9\x5b\xad\x85\x3a\xb6\xff\x05\xfe\x41\xb6\x53\x8d\xfb\x6f\x13\x89\xb5\xb2\x5e\x65\x68\x9c\x15\xa5\xf2\x65\xc7\xbf\x05\xf9\xe6\x1a\x3c\xd6\xe7\x47\x81\x20\x5e\xad\x68\xc4\x61\xdc\x78\x9d\xc3\xd6\xd5\x50\xd4\x6a\xb3\x31\xb6\x80\xee\x37\x38\x90\x3d\xbc\x1b\x2c\xe1\xd5\x19\xeb\xc7\xc3\x5d\x32\x68\xa7\xad\x8f\x33\xf6\xc2\x68\xf3\xd9\x49\x09\x93\x5f\x78\x5d\xf3\xa8\x14\x66\x25\x74\x1c\x40\xd7\x7b\x0c\xa8\x11\xc4\x2c\x5d\x45\xfd\xe8\x3b\x01\xcf\x64\x1d\x3c\x91\xf5\xe4\xe1\x6e\x0a\x6d\x41\x82\x76\x3d\xa1\x1c\x76\x0a\x8d\xbd\x6f\xf7\x18\xe1\xb4\x6f\x45\xa1\xad\xae\xd5\x4e\x64\x06\xa2\x98\x43\x94\x32\x06\x21\x5d\x90\x94\x71\x18\x0f\x7d\xfa\x93\x18\x9f\x6b\xfc\x16\xe2\xaf\x00\x00\x00\xff\xff\xc1\x98\xdc\xea\xc1\x03\x00\x00")

func migration004_new_indicesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration004_new_indicesSql,
		"migration/004_new_indices.sql",
	)
}

func migration004_new_indicesSql() (*asset, error) {
	bytes, err := migration004_new_indicesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/004_new_indices.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2, 0x8e, 0x46, 0x3e, 0xfe, 0x6, 0xd5, 0xa0, 0x46, 0x39, 0x80, 0x10, 0x8f, 0x1c, 0x65, 0xde, 0x62, 0xd0, 0x11, 0x71, 0x70, 0x4d, 0x76, 0xa0, 0xba, 0xc, 0xd6, 0xa6, 0x6a, 0x21, 0xb1, 0xcc}}
	return a, nil
}

var _migration005_remove_foreign_keysSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xcd\x6e\xea\x30\x14\x84\xf7\x79\x8a\xd9\x01\xba\x20\x5d\xee\x5d\x74\xd1\x95\x71\x0e\x3f\xaa\x6b\x23\xc7\xa9\xd4\x95\xe5\x42\x00\x0b\x30\x51\x30\xef\x5f\x85\x50\x95\xaa\xe9\xcf\x82\xe5\x39\x33\x39\xdf\x44\xe3\xc1\x00\x7f\xf6\x7e\x5d\xb9\x58\x20\x2f\x93\xe4\x7a\xce\xa2\x8b\xc5\xbe\x08\x71\x54\xac\x7d\x48\x98\x30\xa4\x61\xd8\x48\x10\x16\x3b\xe7\xf7\x09\x90\x6a\x35\xc7\x58\x69\x9a\x4d\x24\x1e\xe8\xb9\x11\xac\x7f\x59\x6d\xed\xbf\xfb\xf6\x6b\x14\x96\xbf\xe6\xf8\x50\x9e\x62\x1b\xe7\x2c\x34\x9c\xe1\x0d\x38\xc7\x53\x59\x1e\xaa\x56\xd2\x45\xba\xb0\xfa\x09\xc0\xa7\x4c\x4e\x08\x5c\x89\xfc\x51\x22\x56\x2e\x1c\xdd\x22\xfa\x43\xb0\x1b\x77\xdc\x7c\x5a\x58\xbf\xc4\x13\xd3\x7c\xca\x74\xf7\xee\x6f\xaf\xfe\x5c\x33\x5e\xb3\x33\x32\xe8\xec\x5c\xf4\x61\xd8\xa9\xcf\x09\x66\xe8\x6d\x61\xd7\x45\x28\x2a\xb7\xb3\x0b\xdf\x81\xcc\x85\x40\x4a\x63\x96\x0b\x73\x1e\xea\x18\x2c\x4d\xc1\x95\xcc\x8c\x66\x33\x69\xb0\xda\xda\x2b\x72\x02\xe0\xc3\x6f\x74\x5b\x62\xf5\xce\x2e\x4d\x63\xd2\x24\x39\x65\xd7\xd1\xd1\xad\x4d\x8d\x03\x50\x12\x29\x09\x32\x04\xce\x32\xce\x52\x7a\xdf\xe7\xf3\xb4\x8e\x2d\x15\x18\x37\x33\x25\x6f\xd0\xc6\xe1\x14\xbf\xa8\xbd\x51\x9a\x2e\xfe\xf7\x7f\x72\x7c\xf3\x02\x5f\x03\x00\x00\xff\xff\x12\x29\xde\x2e\xf8\x02\x00\x00")

func migration005_remove_foreign_keysSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration005_remove_foreign_keysSql,
		"migration/005_remove_foreign_keys.sql",
	)
}

func migration005_remove_foreign_keysSql() (*asset, error) {
	bytes, err := migration005_remove_foreign_keysSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/005_remove_foreign_keys.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x85, 0xc7, 0xb2, 0x9, 0x86, 0xe5, 0x9d, 0xa4, 0x48, 0x94, 0x83, 0x4c, 0xf0, 0x21, 0x8a, 0x4b, 0x7, 0x97, 0x15, 0x90, 0xdb, 0x60, 0xa0, 0x9a, 0xad, 0x99, 0x42, 0x78, 0x7, 0x11, 0xa1, 0x4d}}
	return a, nil
}

var _migration006_add_height_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x42\xe6\x07\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x39\xfa\x84\xb8\x06\x29\x84\x38\x3a\xf9\xb8\x2a\x24\x24\xe7\x24\x66\xe6\x26\x28\x38\xba\xb8\x28\x78\xfa\xb9\xb8\x46\x28\x24\x78\xa6\x54\xc4\x7b\xa4\x66\xa6\x67\x94\x24\x28\x68\x24\x64\x40\x59\x8e\xc1\xce\x9a\xd6\xd8\x4d\x75\xcd\x4b\x01\x04\x00\x00\xff\xff\xd4\x45\xc4\xac\x7e\x00\x00\x00")

func migration006_add_height_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration006_add_height_indexSql,
		"migration/006_add_height_index.sql",
	)
}

func migration006_add_height_indexSql() (*asset, error) {
	bytes, err := migration006_add_height_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/006_add_height_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd4, 0xcb, 0xb0, 0x34, 0xe8, 0x2a, 0x87, 0xe8, 0x4, 0x15, 0xf3, 0x4c, 0x95, 0x37, 0x10, 0x16, 0x82, 0xa4, 0x87, 0x88, 0x31, 0xf6, 0xc7, 0x7f, 0x36, 0x9d, 0xdd, 0x94, 0x71, 0xb4, 0x1a, 0xfb}}
	return a, nil
}

var _migration007_more_decimalsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xca\xc9\x4f\xce\x56\x70\xf6\x70\xf4\x73\x77\x55\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xc9\x4c\x4b\xcb\x4c\x2e\xcd\x29\xa9\x44\x66\xba\xf8\x87\x3a\xf9\xb8\x6a\x98\x1a\xe8\x58\x68\x2a\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x28\x58\x03\x02\x00\x00\xff\xff\x9f\xa4\x9c\x44\x5c\x00\x00\x00")

func migration007_more_decimalsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration007_more_decimalsSql,
		"migration/007_more_decimals.sql",
	)
}

func migration007_more_decimalsSql() (*asset, error) {
	bytes, err := migration007_more_decimalsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/007_more_decimals.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x61, 0x1d, 0x7b, 0x8, 0x6, 0x21, 0xe6, 0x1c, 0x3a, 0x60, 0xa1, 0x88, 0xed, 0x57, 0x89, 0xcf, 0xf9, 0x76, 0x78, 0x47, 0x69, 0xbd, 0x7c, 0xb1, 0x61, 0xfc, 0x0, 0x9d, 0x2a, 0x72, 0xef, 0xae}}
	return a, nil
}

var _migration008_schema_fixSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x4f\x8f\x9b\x3e\x10\xbd\xf3\x29\xe6\x96\x44\xbf\x5d\x69\x73\xf9\xf5\xd0\x93\x17\xbc\xbb\xa8\xc4\xac\x8c\xa9\xb4\x27\xcb\x01\x27\xb1\x02\x06\x81\x69\xd4\x6f\x5f\x39\x90\x06\x96\x1c\xda\x86\xaa\x7f\xb6\x27\x60\x06\xde\x30\xef\xbd\x19\xdf\xde\xc2\x7f\xb9\xda\x56\xc2\x48\x88\x4b\xc7\xe9\x3f\x47\x46\x18\x99\x4b\x6d\xee\xe5\x56\x69\xc7\xa3\xe1\x33\x30\x74\x1f\x60\x28\xa5\xac\x78\x92\x09\x95\xf3\x64\x27\x93\x7d\x59\x28\x6d\xde\x5f\xfe\x18\xeb\xf4\x5b\x61\xa7\x47\x3c\xff\xe8\x34\x58\xd7\xa3\x28\x5d\x36\x86\x8b\x34\xad\x64\x5d\x5f\x0f\x57\x34\xe6\x7a\x3c\x14\x30\x4c\x3b\xc0\x0e\xc9\x01\x38\x56\x71\xc3\x20\x5e\x11\x30\x62\x7b\x33\x0e\xf1\xa6\xca\x6c\xd8\x7d\x42\xe4\x11\x9f\x12\x49\x25\x85\x91\xe9\xe9\xca\x85\x01\x0f\x31\xcc\xfc\x15\x06\x12\x32\x20\x71\x10\x80\x87\x1f\x50\x1c\x30\x70\x63\x4a\x31\x61\xdc\x66\x23\x86\x56\xcf\x63\xbc\xbc\x48\xd5\x46\xc9\xf4\xeb\xcd\x77\x22\x42\x48\x20\x7e\xb6\x1f\x8c\x73\x13\x10\xd6\x2a\xe0\x00\x0c\xe9\xd9\x89\x7a\xb7\xfc\xff\xee\xcd\xd3\x63\x2a\xa1\x6b\x91\x18\x55\xe8\x11\x47\x9f\x44\xd6\xc8\x7f\x0c\x9d\x19\xe2\xe7\xe9\x1b\x32\x95\x09\x23\x6b\xc3\xfb\xaf\x1a\x95\xcb\x09\xaa\xaf\xb3\x22\xd9\x8f\xea\xe5\x32\x55\xa2\xad\x31\x9e\xfb\x6a\x2b\xcd\x8d\x33\xad\x66\x7f\x94\x62\x8d\xde\xeb\xe2\xa0\xdb\x83\xc5\xa1\x98\xa0\x15\x06\x16\x02\x88\xb5\x2e\xaa\x5c\x64\x6d\xc6\x32\x87\x3c\xef\x15\x45\x3f\x60\xe7\x1e\xc8\xef\x49\x48\x4b\x44\xe7\x93\x87\x90\x62\xff\x91\xc0\x07\xfc\xd2\x9d\xe8\x6a\xbd\xd9\xf3\xe5\x84\x75\x86\x6e\xe9\x4f\xc5\xfa\x33\xb7\x9b\x97\xab\x74\x10\x3e\xc5\x3e\x22\xea\x3e\x21\x3a\x7f\x77\xb7\xb0\x20\x14\xb9\x16\x3c\xc2\x0c\x66\x99\x30\x4a\x2f\x67\x16\x34\xb0\x3c\x75\x01\xbe\x95\x5a\x56\x56\x52\x35\x1b\x92\x7c\x7c\x18\x6f\x1b\x55\x73\xcd\x6b\xbe\xe1\x87\xe3\x6d\xbd\x39\x00\xf3\xc9\x8b\x4f\xd8\x7c\xb9\x18\x4b\x35\xbb\x9b\x5d\x00\x79\x63\x2b\xf0\xa4\x6b\x6b\x74\x12\x31\x8a\x7c\xc2\x06\xee\x71\xfa\xb6\x9a\x5f\xd0\x76\xe1\x50\xfc\x80\x29\x26\x2e\x8e\xfa\xda\xc3\xdc\xbe\xb0\x70\xc0\xf6\xe0\xe1\x00\xdb\x1e\x50\xe4\x22\x0f\xb7\xb1\xae\x2f\x12\x02\x72\x99\x1f\x92\xc9\x0f\xbd\xd1\x54\xf4\xff\x7e\xb2\xd9\x18\xd6\x1c\xca\x7f\x5c\xf2\xfd\xd9\x68\x03\x3f\x6d\x2a\x26\x6f\xe7\x95\x31\xc6\x04\x0e\xed\x31\x68\x6f\x60\x8c\x63\xe6\x57\x58\xa2\x6e\xca\xb2\xa8\xcc\x5f\x3a\xe9\x5f\x02\x00\x00\xff\xff\x60\xb2\x7b\x1f\x47\x0e\x00\x00")

func migration008_schema_fixSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration008_schema_fixSql,
		"migration/008_schema_fix.sql",
	)
}

func migration008_schema_fixSql() (*asset, error) {
	bytes, err := migration008_schema_fixSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/008_schema_fix.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x50, 0x6b, 0x44, 0xdd, 0xcb, 0x6f, 0x51, 0xb1, 0xd4, 0xae, 0xb6, 0xa0, 0x99, 0xd3, 0xd9, 0xb0, 0xc5, 0xfe, 0x51, 0xf2, 0xc4, 0x1b, 0x4b, 0x6f, 0x2f, 0x36, 0x5c, 0x3c, 0x43, 0x7b, 0x6a, 0xa}}
	return a, nil
}

var _migration009_certificate_validationSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\x41\x4b\xc3\x30\x14\x07\xf0\x7b\x3e\xc5\x3b\xb6\xb8\x0d\x3c\xcb\x0e\x99\x79\xc3\x48\x4c\xa5\x4d\x50\x4f\x25\x36\x61\x7b\xd0\xc6\xd2\x46\xf1\xe3\x0b\x9b\xd3\xc9\xea\x0e\xbb\xe5\x25\xff\x17\x7e\xef\xcd\xe7\x70\xd5\xd1\x66\x70\x29\x80\xed\x19\x3b\xae\xab\xe4\x52\xe8\x42\x4c\xab\xb0\xa1\xc8\xb8\x32\x58\x82\xe1\x2b\x85\xd0\xb4\x8e\x3a\x06\xc0\x85\x80\xdb\x42\xd9\x07\x0d\x34\xd6\x4d\x18\x52\xfd\xe1\x5a\xf2\x60\xa4\x7e\x91\xda\x64\xd7\x39\xe8\xc2\x80\xb6\x4a\xcd\xa6\xf3\xfd\xf0\xd6\x84\x71\x0c\x93\x3d\x37\xd3\x20\x8c\xfe\x22\xaa\xd4\x02\x9f\x81\xfc\xe7\x31\x35\xfb\x23\xcf\x67\xd3\xd9\x5f\x66\x76\x22\xcf\x2f\x64\xda\x47\xc1\xcd\x41\xa8\x70\x6d\xe0\xbe\x90\x7a\x5f\x43\xb3\x75\x31\x86\x16\x0a\x7d\x38\x2e\x76\x0f\x35\x79\x58\xee\x33\x8b\xfe\xfd\xb5\xa5\x71\x1b\x86\x9a\x3c\xab\xd0\x7c\x5f\x9f\xae\x76\x09\xa6\xb4\xc8\x9e\xee\xb0\xc4\x9f\xef\xc8\x83\xac\x76\x6b\x66\x5c\x8b\x33\xbd\x6b\xae\x2a\xfc\x7f\xc4\xaf\x00\x00\x00\xff\xff\x81\x19\x77\xe9\x44\x02\x00\x00")

func migration009_certificate_validationSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration009_certificate_validationSql,
		"migration/009_certificate_validation.sql",
	)
}

func migration009_certificate_validationSql() (*asset, error) {
	bytes, err := migration009_certificate_validationSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/009_certificate_validation.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x57, 0x48, 0x37, 0xfa, 0xc3, 0x6e, 0x81, 0x82, 0xb7, 0x10, 0xb3, 0xa2, 0xcd, 0x23, 0x73, 0x89, 0x6f, 0x99, 0x61, 0xe8, 0x37, 0xb4, 0xd, 0x4e, 0x70, 0x28, 0xdd, 0xf5, 0x0, 0x23, 0x1}}
	return a, nil
}

var _migration010_triggersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x95\x51\xab\xda\x30\x1c\xc5\xdf\xfb\x29\xce\xdb\xad\xb8\x96\xfb\x32\xb8\x30\x7c\xa8\xe6\xef\xbd\x42\xd6\x8e\x98\xe2\xde\x4a\xae\x09\x52\xd0\x28\x6d\xdc\xe7\x1f\xd5\xe8\x5a\xea\xc6\x36\xaf\x62\xdf\x72\xfa\xe7\xe4\xe4\xc7\x69\x13\x45\x18\x6e\xca\x55\xa5\x9c\x41\xbe\x0b\xda\xcb\xb9\x53\xce\x6c\x8c\x75\x63\xb3\x2a\x6d\x90\x70\x49\x02\x32\x19\x73\x82\xd2\xba\x32\x75\x8d\x84\x31\x4c\x32\x9e\x7f\x4d\xf1\xae\xd6\xca\x2e\x0d\x58\x96\x8f\x39\x85\x9f\x5f\x3e\xbd\x0c\x90\x66\x12\x69\xce\x39\x18\x4d\x93\x9c\x4b\x3c\x3d\xc7\xcf\xfe\x79\xc2\x97\xcb\xdb\x91\xd5\xc1\xdf\x06\x71\x95\xb2\xb5\x5a\xba\x72\x6b\xdb\x61\x7e\xa8\xf5\xfe\x1e\x51\x26\x82\x12\x49\x90\x62\xf6\xfa\x4a\x02\x6e\x55\x94\xb6\x36\x95\x2b\x8e\x01\x92\x69\x93\x74\x96\xce\x49\x48\x64\x69\x3b\x6d\xe1\x11\x06\xc0\x34\x13\xa0\x64\xf2\x06\x91\x2d\x02\x20\xff\xc6\x1a\xcf\xd6\x6c\x00\xcc\x49\xb6\x95\xf8\xe8\x3f\xba\xa0\x0d\x91\xd2\x22\x5e\x56\x46\x97\xae\x50\x9b\xed\xde\xba\x00\x58\xbc\x91\xe8\x78\xc6\xa5\xc6\xe8\x30\xda\x0e\x55\xea\x0f\x03\xb1\xdf\x69\xe5\x4c\x07\x84\x3f\xd9\x9d\x40\x44\xc8\x38\xeb\x82\x78\x18\x38\xbe\x25\xa7\x6f\xe6\x9a\x9e\xfc\x7a\xdf\xa0\xf1\xab\xf8\xe4\x3c\xea\x29\x43\x84\x3d\x06\x88\x0e\x87\xd5\xe6\xfd\x2c\x0d\xce\x5c\x4e\x06\x67\x26\x5e\xb8\x41\x59\xba\x3c\xfe\xaf\x2e\xff\xca\x23\x42\xd8\xef\xc9\xb1\x3b\x1d\x1e\x8f\x09\x4e\x9b\xb5\xe9\x81\x63\xc4\xe9\x71\xc0\x5d\xe6\xd1\x8c\x5d\xcd\xe3\x77\x57\xd2\x2c\x65\xf4\x1d\xa1\x4f\x3a\xb8\xc1\x3d\xe3\x77\x38\xfc\x69\xfe\xe0\xff\x33\x00\x00\xff\xff\xd9\x39\x35\x55\x5e\x07\x00\x00")

func migration010_triggersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration010_triggersSql,
		"migration/010_triggers.sql",
	)
}

func migration010_triggersSql() (*asset, error) {
	bytes, err := migration010_triggersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/010_triggers.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x1b, 0x53, 0x1c, 0xd2, 0xaf, 0xf, 0x82, 0xa4, 0x40, 0x27, 0x7e, 0x75, 0x6f, 0xdb, 0x3f, 0xe6, 0xcd, 0x8f, 0xc1, 0xb5, 0xe, 0xbc, 0xd1, 0x7f, 0x30, 0xc9, 0xa4, 0x6, 0xa2, 0xce, 0x74}}
	return a, nil
}

var _migration011_add_licenseSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x42\xe6\x07\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x39\xfa\x84\xb8\x06\x29\x84\x38\x3a\xf9\xb8\x2a\x24\xe7\x24\x66\xe6\x72\x29\x28\x38\xba\xb8\x28\x38\xfb\xfb\x84\xfa\xfa\x29\xe4\x64\x26\xa7\xe6\x15\xa7\x2a\xf8\x85\x39\x06\x39\x7b\x38\x06\x69\x18\x99\x9a\x6a\xea\x60\x55\x13\x5f\x5a\x94\x83\x57\x5d\x41\x51\x6a\x59\x66\x6a\x39\xaa\x1a\x6b\xec\x8e\x73\xcd\x4b\x21\xd9\xd9\x10\xcb\x3c\xfd\x5c\x5c\x23\x14\x3c\x53\x2a\xe2\x7d\xa0\x6e\xd7\x80\x3a\x10\xec\x1e\x1c\x8a\x42\x83\x7c\xe0\xea\x40\x1e\xc1\xaa\x36\x00\xea\x01\x0d\xa8\x4f\xf0\x38\x1e\x10\x00\x00\xff\xff\xda\x9e\xbc\xf1\x82\x01\x00\x00")

func migration011_add_licenseSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration011_add_licenseSql,
		"migration/011_add_license.sql",
	)
}

func migration011_add_licenseSql() (*asset, error) {
	bytes, err := migration011_add_licenseSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/011_add_license.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0x1c, 0x61, 0xcc, 0x94, 0x74, 0x3d, 0x22, 0xb1, 0xd3, 0x3b, 0xc8, 0x92, 0x8a, 0xe7, 0x3c, 0x53, 0x7a, 0x9, 0xe0, 0x47, 0x8b, 0xc4, 0x39, 0x9a, 0x3, 0x64, 0x76, 0xd3, 0xce, 0x8e, 0xd1}}
	return a, nil
}

var _migration012_store_last_heightSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x42\xe6\x07\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x39\xfa\x84\xb8\x06\x29\x84\x38\x3a\xf9\xb8\x2a\x64\xe5\x27\xc5\x17\x97\x24\x96\x94\x16\x2b\x38\xba\xb8\x28\x38\xfb\xfb\x84\xfa\xfa\x29\x80\x44\x52\x15\xbc\x82\xfd\xfd\xac\xb1\x1b\xe4\x9a\x97\x02\x08\x00\x00\xff\xff\x00\xee\x2c\xf4\x71\x00\x00\x00")

func migration012_store_last_heightSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration012_store_last_heightSql,
		"migration/012_store_last_height.sql",
	)
}

func migration012_store_last_heightSql() (*asset, error) {
	bytes, err := migration012_store_last_heightSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/012_store_last_height.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0x9b, 0x2b, 0x71, 0x36, 0x40, 0x5a, 0x22, 0x41, 0x67, 0x9f, 0xb1, 0xe1, 0x33, 0x85, 0x37, 0x33, 0x13, 0x6f, 0xc, 0x82, 0xba, 0x1a, 0xc7, 0xf1, 0x8, 0x77, 0x26, 0xad, 0xf0, 0x2a, 0x7d}}
	return a, nil
}

var _migration013_add_input_vinSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xc1\x6a\x84\x30\x10\x86\xef\x3e\xc5\xdc\x6c\x29\x1e\x5a\xf0\xd4\xd3\x98\x4c\x55\x48\x53\x88\x49\xaf\x92\xda\x20\x01\x9d\x8a\xcd\xee\xf3\x2f\x2e\xc8\xee\x61\xf7\xb0\xb7\xf9\x87\x99\xef\xfb\x8b\x02\x5e\xe6\x38\xae\x3e\x05\x70\x4b\x96\x5d\xe7\x2e\xf9\x14\xe6\xc0\xa9\x0a\x63\xe4\x0c\x95\x25\x03\x16\x2b\x45\x10\x79\x39\x24\x40\x29\x41\x7c\x29\xf7\xa9\xe1\x18\x19\x5a\x6d\xa9\x26\x03\x4e\x77\x6d\xad\x49\xbe\xdf\xa6\x11\xff\x3e\xe8\x11\x0d\xea\x9a\x76\xd5\xf0\x17\xf9\xc7\xff\x87\xcb\xf0\x8d\x46\x34\x68\x9e\xde\xca\xf2\x79\x3b\x36\x28\x36\x44\x47\x16\xf2\xc9\xa7\xc8\xaf\xf9\xf6\xac\xd0\xd2\xbe\xe8\xc7\xc0\x61\xf5\x53\x3f\xc4\x1c\xb4\x53\x0a\x24\x7d\xa0\x53\xf6\x1c\xee\x37\x3f\x05\x00\x00\xff\xff\xb4\x34\x85\xa6\x30\x01\x00\x00")

func migration013_add_input_vinSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration013_add_input_vinSql,
		"migration/013_add_input_vin.sql",
	)
}

func migration013_add_input_vinSql() (*asset, error) {
	bytes, err := migration013_add_input_vinSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/013_add_input_vin.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe6, 0x99, 0xa4, 0xd6, 0xf4, 0xfc, 0xe6, 0x5b, 0x1f, 0xc1, 0x62, 0x5b, 0xb2, 0xf7, 0x67, 0x64, 0xca, 0x8f, 0x32, 0xaa, 0xf, 0x5f, 0x74, 0x1e, 0x81, 0x3a, 0xf6, 0x60, 0xe4, 0x6e, 0x26, 0x18}}
	return a, nil
}

var _migration014_yay_new_metadataSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x55\xcd\x6e\xe3\x36\x10\xbe\xeb\x29\xe6\x48\xa3\xbb\x40\x52\xec\x16\x05\x8a\x3d\x30\x12\x9d\x65\x23\xd3\xa9\x44\x15\x9b\x13\xc1\xb5\x18\x9b\x80\x25\x05\x12\x85\xed\xf6\xe9\x0b\x52\xb6\x4c\x39\xb4\x9d\xb6\xb9\xa4\xbd\x48\x33\x9c\x6f\x66\x38\x3f\x9f\xf4\xfe\x3d\xfc\x50\xe9\x75\x2b\x8d\x82\xe2\x29\x8a\x7c\x3d\x37\xd2\xa8\x4a\xd5\xe6\x46\xad\x75\x1d\xc5\x19\xc1\x9c\x00\xc7\x37\x29\x01\x3a\x07\xb6\xe4\x40\xbe\xd0\x9c\xe7\x60\xe4\x3a\x42\x11\x80\x2e\x21\x27\x19\xc5\xe9\xbb\x08\xec\x21\xb0\xdf\x71\x16\x7f\xc6\x19\xfa\xf1\xe3\xc7\x99\xf3\x60\x45\xea\xac\xab\x56\x49\xa3\x4a\x21\x0d\x24\x98\x13\x4e\x17\x64\xb4\x43\x42\xe6\xb8\x48\x39\xc4\x45\x96\x11\xc6\x85\xb5\xe6\x1c\x2f\xee\xad\x67\xd5\x94\xfa\x51\xff\x6d\x57\x58\x32\x28\xee\xad\x43\x28\x6c\x04\x70\x9f\xd1\x05\xce\x1e\xe0\x8e\x3c\xc0\xfd\x9d\xd0\x25\x20\x5d\xce\x6c\xc6\x82\xd1\xdf\x0a\x02\xb4\xfc\x43\x18\xb9\x46\x46\xae\xdd\x31\x65\x09\xf9\xe2\x4e\x97\xfd\x93\xe9\x4d\x3c\x94\x04\xe8\x50\xdb\x33\x9c\x79\xea\xcd\x62\x57\x00\x20\xaf\x94\x59\x34\x23\xec\x96\x32\xf2\x89\xd6\x75\x93\xdc\x1c\x0a\xf9\x8c\xb3\x9c\xf0\x4f\xbd\x79\xfc\xb9\xfa\xfa\x01\xe2\x65\x9a\xda\x22\x76\xba\xe8\x6b\xbd\x6a\x4a\x25\x56\xfa\x97\xf0\xf4\x48\x5d\xfe\xd3\xb9\xae\xb6\x52\x57\xe2\xd4\x74\x6d\x8b\x6e\xe8\x2d\x65\x1c\x0a\x96\xd3\x5b\x46\x12\x37\x59\xe7\xa4\x4b\x77\x73\xf4\xe1\x6a\xe6\x04\x1c\x73\x92\x41\x4e\x38\x6c\xa5\xd1\xf5\xf5\x58\xc7\xa0\x8a\xb5\xaa\x55\x2b\xb7\x62\xa5\xdf\xec\x9a\xcc\x97\x19\xa1\xb7\xcc\x59\xe6\x77\xc2\xf5\x01\xd0\xbe\x1d\x33\xc8\xc8\x9c\x64\x84\xc5\x64\xd7\x58\xdf\xb6\x64\x90\x90\x94\xd8\xac\x38\x8f\x71\x42\xbc\x7b\xb0\x25\xe0\x98\xd3\x25\x0b\x24\xb1\x24\x43\xc3\x2c\x26\x09\xdc\xf9\x34\xb0\xed\xbd\xab\xdd\xab\x70\xc8\x75\xb4\xe3\xe3\xd4\x77\x81\xdf\x8d\xd7\xfc\x3f\x6d\xbd\xae\xc5\x56\x77\xe6\xf9\xe6\xdb\x53\x31\x2e\xf9\xeb\x6c\xf9\xbf\xa4\xcc\x1b\x67\xca\xa1\xa3\x80\x26\xdd\x7d\x25\xce\x04\x77\x7b\x92\xe8\x3f\xb9\xe2\x38\xb5\xfb\x33\x6c\xb8\xab\x2f\x02\xc0\x49\x62\x13\x15\x0b\x06\xe6\xfb\x93\x82\xfd\xff\xf9\xfa\xea\xca\x95\xe4\xd9\x5b\xb5\x55\xb2\x53\xc2\xe8\x4a\x85\xbe\xf3\x1e\xb4\x6b\xfa\x76\xa5\xc4\x46\x76\x1b\xf0\xff\xf8\x61\x58\x2d\x2b\xf5\x02\x58\xa7\xff\x7c\x61\xde\x4a\x95\x5a\x8a\x49\x3d\xa7\xc3\xf6\xed\xf6\x1c\xea\xb1\x95\x95\x12\xdf\x74\x69\x36\x17\x92\x0f\xc8\x8d\xd2\xeb\x8d\xb9\x00\x2d\xfb\x56\x1a\xdd\xd4\x17\x60\xb2\x2f\x75\x23\x5e\x08\x6e\xba\x73\xc3\x53\x95\xd4\x67\xeb\xfc\xa6\xbe\x76\xda\x5c\x6c\xc7\x46\x76\x3b\x92\x58\xbe\x00\xa7\xec\x81\x32\x8e\xae\x8f\x71\x03\xa6\x55\x8f\xaa\x55\xf5\xca\xdb\xab\x9f\x9e\x5d\xcd\x11\xcf\x0d\x2b\x5f\xe0\x34\xa5\x8c\x07\x63\xe9\x72\x48\xf9\x6b\x3e\x90\xd8\x07\x34\x7d\x6d\xda\xef\xe7\xea\xef\x2c\x15\xce\x01\x56\xda\x9c\x0d\x60\xa9\x77\xce\x6e\xbf\xc1\xa6\x2f\xf7\x1b\x7a\x6c\x6d\xea\xb5\x6f\x7e\x65\x06\x1f\x3e\x3c\xae\x8f\xc8\x3e\xc7\x0b\x1e\x8c\x13\x06\x23\x5f\x0b\x80\x7d\x0e\x23\x4f\x39\x0d\x75\x3c\x46\x9e\x72\x1a\xea\xb8\x8c\x3c\xe5\x34\xd4\x23\x33\x7a\x76\x74\xda\xcd\xee\x31\x3a\xc8\x01\xa0\xcf\x6c\xe4\x29\x27\xa1\x3b\x6a\x23\x5f\x0b\x80\x47\xbe\xa2\xbd\x14\x00\x1d\x51\x1b\x4d\xf5\x80\x43\xd3\x01\x6a\xba\x80\x61\x60\x36\x72\xaf\x80\xd9\xe7\x35\xf2\x94\x00\x74\xca\x6d\x34\x55\x03\xf8\x23\x8e\xa3\x23\x3d\xe0\x31\x52\x1d\x8d\x52\x28\xee\x8e\xce\x68\x27\x84\x86\xec\xe8\x8c\xdc\x2b\x14\xc1\x92\x19\xd9\x67\xe8\x12\x7b\xa6\xa2\xbd\x14\x02\x8d\x84\x45\xa3\x38\x3b\xcd\xda\xbf\x02\x00\x00\xff\xff\x09\x6d\x1b\x0f\x37\x0f\x00\x00")

func migration014_yay_new_metadataSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration014_yay_new_metadataSql,
		"migration/014_yay_new_metadata.sql",
	)
}

func migration014_yay_new_metadataSql() (*asset, error) {
	bytes, err := migration014_yay_new_metadataSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/014_yay_new_metadata.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6c, 0x34, 0x7d, 0x78, 0x57, 0xa6, 0xf5, 0xcd, 0xfa, 0xe8, 0xd8, 0xa3, 0xe, 0xf, 0x1d, 0x7b, 0xf7, 0xc3, 0x80, 0xb8, 0x9c, 0x4b, 0x9, 0x72, 0x52, 0xa, 0xf3, 0xc6, 0xed, 0x11, 0x4c, 0xa4}}
	return a, nil
}

var _migration015_adjust_column_sizesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd0\xcf\x4a\xc4\x30\x10\x06\xf0\x7b\x9f\x62\x6e\x55\x64\x61\x05\x05\xc1\x53\xb6\x1b\x5c\x21\x66\xb1\x9b\x88\xb7\x26\xb6\x63\x19\xd8\x8e\x4b\x33\xc5\xd7\x97\xb2\x6e\x95\x22\xe2\xc1\x4b\xc2\xf7\x91\x3f\x3f\x66\xb1\x80\x8b\x8e\xda\x3e\x0a\x82\x3f\x64\xd9\xf7\xbc\x93\x28\xd8\x21\xcb\x0a\x5b\xe2\x4c\x19\xa7\x4b\x70\x6a\x65\x34\x04\x89\x6d\xc8\x00\x00\x8a\x8d\xb2\x77\x1a\x8a\xad\xf1\x0f\xf6\xd8\x7f\xae\x4f\xaa\x2c\x36\xaa\x3c\xbb\x5e\x2e\xcf\xc7\x63\xa5\x2a\xc6\x07\x76\xda\x41\x3e\xc8\xeb\x4d\xf7\x72\x95\x8f\xf7\x8c\x72\x7a\x6a\xaa\x81\xa9\x7e\x6b\xb0\xaa\x29\x07\xbb\x75\x60\xbd\x31\xb7\x3f\xb3\x34\x37\x7f\x06\xc7\xa6\xe9\x31\xa5\x19\xf7\xd4\x9e\xf6\x2f\xf2\x5c\xbc\x8f\x42\x7c\x39\x71\x8f\xb1\x6a\x91\xb1\x8f\xfb\xaa\x26\xf0\xf6\xfe\xd1\xeb\xff\x24\x07\xe2\xc3\x20\x01\xd4\x7a\x3d\x8d\xf7\x9d\x84\x31\xa5\x00\x4e\x3f\xbb\xdf\xfe\xf8\x08\x00\x00\xff\xff\x12\xb3\xf9\xad\xd8\x01\x00\x00")

func migration015_adjust_column_sizesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration015_adjust_column_sizesSql,
		"migration/015_adjust_column_sizes.sql",
	)
}

func migration015_adjust_column_sizesSql() (*asset, error) {
	bytes, err := migration015_adjust_column_sizesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/015_adjust_column_sizes.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0xf7, 0x9c, 0xc1, 0xcd, 0x39, 0xb6, 0x4e, 0xd8, 0x43, 0x1c, 0xe2, 0x15, 0xe2, 0xfa, 0xe, 0xce, 0xa6, 0xe, 0x3b, 0x3c, 0xbc, 0xb1, 0xcc, 0x19, 0xe5, 0x52, 0x6f, 0x24, 0x7e, 0x77, 0xe}}
	return a, nil
}

var _migration016_transaction_hashes_adjustmentSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xcf\xbd\xae\x83\x30\x0c\x05\xe0\x3d\x4f\xe1\xfd\x8a\x27\xb8\x13\x3f\x56\x8b\x14\xa0\xa2\x41\x62\x23\x69\xb0\x20\x2a\x84\x8a\x78\xe8\xe3\x57\xa2\x0b\x03\x52\x3b\x74\xb3\xcf\xf2\x9d\x13\x45\xf0\x37\xbb\x61\x35\x4c\xd0\x3c\x84\xd8\xff\x57\x36\x4c\x33\x79\x4e\x68\x70\x5e\xc4\x52\x61\x0d\x2a\x4e\x24\x82\xbe\x4d\x8b\xbd\x6b\x01\x00\x90\x9e\xe3\xf2\x84\x90\x56\xb2\x29\x4a\xd0\xbc\x1a\x1f\x8c\x65\xb7\xf8\x6e\x34\x61\xa4\xa0\x8f\xc3\x02\xb3\xbc\x29\x14\xb6\xea\xff\x98\x45\xdf\x7f\x5d\xc8\x4e\xc6\xcd\x5b\x9d\xac\xae\x2e\x90\x97\x19\xb6\x90\xf7\xcf\x4e\x3a\x4b\x3e\xd0\x0f\x08\xbd\x19\x87\x9b\xa7\x37\xa2\x77\xd7\x87\x5d\xaf\x00\x00\x00\xff\xff\x63\xcf\x20\x8c\x78\x01\x00\x00")

func migration016_transaction_hashes_adjustmentSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration016_transaction_hashes_adjustmentSql,
		"migration/016_transaction_hashes_adjustment.sql",
	)
}

func migration016_transaction_hashes_adjustmentSql() (*asset, error) {
	bytes, err := migration016_transaction_hashes_adjustmentSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/016_transaction_hashes_adjustment.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x4, 0xb5, 0x3c, 0x1b, 0xd6, 0xab, 0xa5, 0x6e, 0x69, 0xe9, 0xae, 0x21, 0xc, 0xe, 0x98, 0xd4, 0xf3, 0xe6, 0x15, 0x27, 0x7f, 0xe0, 0xc6, 0xe2, 0xd0, 0x78, 0xb, 0x67, 0x44, 0x90, 0xa9}}
	return a, nil
}

var _migration017_claim_ownerSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xcb\x8a\x83\x30\x14\x86\xf7\x79\x8a\xb3\x54\x46\xc1\x59\xcd\x62\x70\x11\x4d\x98\x11\x6c\x5a\x34\x29\xdd\x49\xd0\xa0\x81\x1a\x45\x63\x9f\xbf\xb4\xb4\x60\x2f\x76\xe1\xf2\xe7\x5c\xfe\x8f\xcf\xf7\xe1\xab\xd5\xf5\x20\xad\x02\xd1\x23\x34\xcf\xb9\x95\x56\xb5\xca\xd8\x48\xd5\xda\x20\x9c\x72\x9a\x01\xc7\x51\x4a\xa1\x3c\x4a\xdd\x22\x00\x00\x4c\x08\xc4\xdb\x54\x6c\x18\xd8\x41\x9a\x51\x96\x56\x77\xa6\x68\xe4\xd8\x14\x53\x5f\x5d\xfe\xec\x71\x16\xff\xe3\xcc\xf9\x09\x5c\xef\xf9\xe6\xd4\x4d\xf6\xbe\x97\x30\xee\x7c\x07\x2e\x08\x96\x27\x7f\x8c\x92\xdf\xf7\x34\xd4\x54\x2b\x39\x13\x46\xe8\x01\x9c\x05\x4e\x6f\xc6\xe2\xae\xec\x16\x3b\x82\xf9\xad\x16\x72\xca\x17\x9d\x84\xaf\x13\x5d\x79\x0f\x3a\xc2\x6b\xfa\x04\x72\x0e\x00\x00\xff\xff\x07\x32\x4d\xf8\xbd\x01\x00\x00")

func migration017_claim_ownerSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration017_claim_ownerSql,
		"migration/017_claim_owner.sql",
	)
}

func migration017_claim_ownerSql() (*asset, error) {
	bytes, err := migration017_claim_ownerSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/017_claim_owner.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0x87, 0x97, 0x7b, 0x67, 0x1, 0x1e, 0x62, 0xa4, 0x3a, 0xc6, 0x60, 0x5b, 0x69, 0x9f, 0x68, 0x3, 0x4f, 0x22, 0xa6, 0x54, 0x1d, 0x69, 0x42, 0x31, 0x1a, 0x89, 0x44, 0x49, 0xbf, 0x3f, 0xb4}}
	return a, nil
}

var _migration018_cert_sync_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\xb1\x0a\xc2\x30\x10\x87\xf1\x3d\x4f\xf1\x1f\x15\xed\x13\x38\xa5\x26\x60\xa1\x38\xd8\x28\x6e\xe5\xb0\x47\x73\x43\xcf\xd2\x9c\xd2\xc7\x17\x37\x07\xb7\xef\x9b\x7e\x55\x85\xdd\x24\xe3\x42\xc6\xb8\xce\xce\xfd\x7e\x67\x64\x3c\xb1\x5a\xcd\xa3\xa8\xf3\x6d\x8a\x17\x24\x5f\xb7\x11\xa2\xf3\xcb\x1c\x00\xf8\x10\xd0\x9c\x43\xbc\xa3\x19\xd6\x3e\xad\x27\x2a\xf9\x26\x8a\x8d\x2d\xa4\x85\x1e\x26\x4f\xed\x33\x95\x0c\xdf\x1d\xf7\x78\x8b\x7e\x63\x7b\xf8\x2f\x45\x1d\x3e\x01\x00\x00\xff\xff\xe5\xa6\x6b\x1d\x92\x00\x00\x00")

func migration018_cert_sync_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration018_cert_sync_indexSql,
		"migration/018_cert_sync_index.sql",
	)
}

func migration018_cert_sync_indexSql() (*asset, error) {
	bytes, err := migration018_cert_sync_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/018_cert_sync_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x42, 0x87, 0xba, 0x4f, 0x4a, 0x3a, 0xc7, 0x5c, 0x46, 0x4c, 0xcc, 0x80, 0x82, 0x68, 0x47, 0xf6, 0x74, 0xf6, 0x26, 0xe0, 0x95, 0x4a, 0xfd, 0x35, 0xf, 0x9d, 0x11, 0xec, 0x53, 0x1a, 0xd8, 0xd6}}
	return a, nil
}

var _migration019_raw_txSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x42\xe6\x07\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x39\xfa\x84\xb8\x06\x29\x84\x38\x3a\xf9\xb8\x2a\x94\x14\x25\xe6\x15\x27\x26\x97\x64\xe6\xe7\x71\x29\x28\x28\x28\x38\x7b\x38\xfa\xb9\xbb\x2a\x38\xfb\xfb\x84\xfa\xfa\x29\x14\x25\x96\x83\xb1\xaf\xab\x8b\x67\xa8\x6f\x88\x6b\x44\x88\x82\x5f\xa8\x8f\x8f\x82\x8b\xab\x9b\x63\xa8\x0f\x84\x63\x8d\xdd\x2a\xd7\xbc\x14\x40\x00\x00\x00\xff\xff\xd4\xdc\xe3\xee\x93\x00\x00\x00")

func migration019_raw_txSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration019_raw_txSql,
		"migration/019_raw_tx.sql",
	)
}

func migration019_raw_txSql() (*asset, error) {
	bytes, err := migration019_raw_txSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/019_raw_tx.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0xeb, 0x6b, 0xc9, 0x6e, 0xaa, 0x2e, 0xef, 0xd9, 0xe7, 0xcd, 0xb3, 0xf6, 0x86, 0x71, 0x42, 0x70, 0x4, 0x1e, 0x64, 0x1e, 0xa0, 0x53, 0xc4, 0x9f, 0x27, 0x3a, 0x28, 0xc5, 0x64, 0x4c, 0x73}}
	return a, nil
}

var _migration020_content_typeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x8a\xc2\x40\x10\xc6\xf1\x3e\x4f\x31\xe5\x1d\x47\x8a\x13\x11\xc1\x6a\xb2\x8e\xa6\x18\x22\x6c\x36\xb6\x61\x8d\x63\x58\xc8\xae\x21\x8c\x85\x6f\x2f\x11\x04\x05\xcb\x1f\x7c\x7c\xfc\xf3\x1c\xfe\x62\xe8\x27\xaf\x02\xcd\x98\x65\xef\xae\xd5\xab\x44\x49\x5a\x48\x1f\x52\x86\xec\xc8\x82\xc3\x82\x09\xba\xc1\x87\x08\xa6\xc4\x6a\x4f\xd0\x5d\x93\x4a\xd2\x56\xef\xa3\x7c\xe2\x88\xd6\x94\x68\x7f\xfe\x57\x8b\xdf\x79\x6d\xd1\xcc\x1f\x35\x39\xb8\xe9\x65\x1d\x4f\x4b\x30\x07\x66\x74\xf4\x72\xdb\x4b\x92\xc9\x0f\x6d\x17\xa0\x6a\x98\x61\x4b\x3b\x6c\xd8\x3d\xb1\xf9\x9e\x47\xe9\xfc\x08\x00\x00\xff\xff\x0b\x34\xf4\x0f\xc7\x00\x00\x00")

func migration020_content_typeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration020_content_typeSql,
		"migration/020_content_type.sql",
	)
}

func migration020_content_typeSql() (*asset, error) {
	bytes, err := migration020_content_typeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/020_content_type.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5c, 0xa1, 0x5c, 0x4c, 0x52, 0xa, 0x32, 0xac, 0x46, 0x8b, 0x1e, 0xbe, 0xb9, 0x99, 0x72, 0x3f, 0xbc, 0x3d, 0x5b, 0xca, 0xf1, 0x8f, 0x45, 0x69, 0xf3, 0x55, 0xf4, 0x76, 0x8f, 0x5a, 0x52, 0x70}}
	return a, nil
}

var _migration021_claim_referenceSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\xaa\xc2\x40\x10\x45\xfb\x7c\xc5\x74\x79\x0f\x09\x28\xd8\x59\x4d\xd6\xd1\x14\x63\x84\x64\xb7\x0e\x4b\x1c\xc3\x42\x76\x90\x65\xff\x1f\x89\x41\x10\xb4\xbb\xe7\x14\x87\x5b\x55\xb0\x89\x61\x4a\x3e\x0b\xb8\x47\x51\x7c\x72\x9f\x7d\x96\x28\x9a\x6b\x99\x82\x16\xc8\x96\x3a\xb0\x58\x33\xc1\x38\xfb\x10\xc1\x34\xd8\x9e\x09\xcc\x95\xdd\xa5\x5d\xdd\x90\xe4\x2e\x49\x74\x94\x2f\x36\x0d\x76\x7f\xfb\xed\xff\x6b\xa0\x59\x62\x3d\x59\x28\x67\x9f\x83\xee\xca\x25\xc3\x68\xe9\x2d\x86\x49\x54\x92\x9f\x87\x31\x94\xd0\x3a\x66\x38\xd2\x09\x1d\xdb\x15\x0e\xbf\xaf\x92\xde\x9e\x01\x00\x00\xff\xff\x3b\xe1\xdf\x86\xd3\x00\x00\x00")

func migration021_claim_referenceSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration021_claim_referenceSql,
		"migration/021_claim_reference.sql",
	)
}

func migration021_claim_referenceSql() (*asset, error) {
	bytes, err := migration021_claim_referenceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/021_claim_reference.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6b, 0xcb, 0xb0, 0xe2, 0xca, 0xaf, 0x18, 0x6f, 0x9e, 0xb7, 0xa9, 0x21, 0xb5, 0x12, 0x73, 0x8c, 0x3f, 0x3c, 0x8a, 0x82, 0x94, 0x3a, 0xa1, 0x4d, 0xfa, 0xcb, 0xaa, 0x6e, 0x1d, 0xcd, 0x81, 0x1b}}
	return a, nil
}

var _migration022_align_claim_idSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x55\x4d\xcf\xda\x30\x0c\xbe\xf7\x57\xf8\x06\x68\x43\xda\x24\x0e\x93\x76\x0a\xa9\xf9\xd0\xb2\x04\xa5\xe9\xa4\x9d\xaa\xd2\x86\x2a\x1a\xfd\x50\x49\xff\xff\x54\x18\xa5\x1d\x05\x69\xa2\x8c\xf7\xcd\xa9\x8e\x5d\x3f\x7e\x9c\xc7\xc9\x74\x0a\x1f\x52\x93\x94\xa1\xd5\xe0\x17\x8e\xd3\xb6\x3d\x1b\x5a\x9d\xea\xcc\xce\x75\x62\x32\x87\x30\x85\x12\x14\x99\x33\x84\x68\x1f\x9a\x34\x30\x59\xb0\x37\x07\xeb\x00\x00\xb8\x52\x6c\x60\x21\x24\xae\x97\x1c\xbe\xe1\xcf\x6e\x48\x60\xb6\xbb\x5f\xc1\xe7\xaf\xfd\xf9\x31\x8b\xff\x11\xd9\x86\xc9\x3d\x54\x1b\x26\x03\x23\x1e\xd1\xe8\x8a\xf0\x25\x02\x15\xcc\xff\xce\xcf\x04\xe3\xcb\xc7\x0f\x22\xe9\x8a\xc8\xf1\xec\xd3\xa4\x8e\x95\x84\xd6\x59\x3c\x54\x30\xaa\xec\xee\x4b\xba\x9d\x8d\xea\x9f\x19\x51\xd8\xec\x04\x55\x66\xa2\x3c\xd6\x41\x64\x46\xc0\x85\x02\xee\x33\xf6\xf1\x26\x5c\xa9\x77\xba\xd4\x59\xa4\xaf\xec\x87\xc1\x5d\x5c\x10\x9f\x9d\x0a\x18\xec\xa0\xda\x12\x79\x7a\xfb\xda\x0c\xfa\x5a\x78\x54\x62\x03\xd7\xb5\x1e\x06\x6f\x0e\x6f\x70\x91\xff\x37\xd9\x0d\x5e\x39\x71\x5d\xa0\x82\x7b\x4a\x92\x35\x57\x57\xc3\x79\x8c\xa9\x57\x7b\x82\xc7\x67\x5e\x93\xc6\x5d\x2f\x89\x0b\x94\xc8\x29\x7a\xa7\x34\xb7\xe2\x04\x07\x17\x19\x2a\x04\x4a\x3c\x4a\x5c\xfc\xdb\xeb\x6f\xdc\xba\x11\x5c\x00\xa1\x6a\x2d\xf8\x53\xa4\xde\x4b\xbc\x7b\x17\xf6\x93\xef\x88\xf2\xfd\x74\x20\xaf\x6c\x51\xbd\x60\xca\x07\x28\xfd\x50\x15\x45\x5e\xf6\xd5\xfe\xc7\xa3\xe3\xcb\x2d\xd1\xb3\xf5\x96\xa6\x2f\xdc\x66\x79\x99\x86\xfb\xe0\x05\x6f\xd6\x9d\xf2\x7f\x07\x00\x00\xff\xff\x6e\x89\x96\x9a\x65\x08\x00\x00")

func migration022_align_claim_idSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration022_align_claim_idSql,
		"migration/022_align_claim_id.sql",
	)
}

func migration022_align_claim_idSql() (*asset, error) {
	bytes, err := migration022_align_claim_idSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/022_align_claim_id.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0x5a, 0x2a, 0x58, 0x65, 0xde, 0x89, 0xd9, 0xe9, 0x41, 0x53, 0x74, 0xa0, 0xd2, 0x3e, 0x5c, 0x81, 0xca, 0x1, 0xa2, 0x5c, 0xb3, 0x7c, 0x47, 0xc1, 0x14, 0x59, 0xb2, 0xc5, 0x3e, 0x8c, 0x3b}}
	return a, nil
}

var _migration023_sdhash_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x42\xe6\x07\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x39\xfa\x84\xb8\x06\x29\x84\x38\x3a\xf9\xb8\x2a\x24\xe7\x24\x66\xe6\x2a\x38\xba\xb8\x28\x78\xfa\xb9\xb8\x46\x28\x68\x14\xa7\xc4\x67\x24\x16\x67\x28\x38\x06\x3b\x6b\x5a\x63\x37\xc5\x35\x2f\x05\x10\x00\x00\xff\xff\x4b\xd5\x01\xd6\x6e\x00\x00\x00")

func migration023_sdhash_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration023_sdhash_indexSql,
		"migration/023_sdhash_index.sql",
	)
}

func migration023_sdhash_indexSql() (*asset, error) {
	bytes, err := migration023_sdhash_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/023_sdhash_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5d, 0x23, 0x93, 0x36, 0xf, 0x8f, 0xfb, 0x97, 0xba, 0x1a, 0xb, 0xfc, 0x2, 0xd0, 0xe2, 0x66, 0xe5, 0xfb, 0x3e, 0x39, 0xda, 0xd2, 0xa, 0x88, 0xd2, 0x35, 0x72, 0xae, 0xa0, 0x4a, 0x44, 0x80}}
	return a, nil
}

var _migration024_claims_in_channelSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x42\xe6\x06\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x39\xfa\x84\xb8\x06\x29\x84\x38\x3a\xf9\xb8\x2a\x24\xe7\x24\x66\xe6\x2a\x38\xba\xb8\x28\x38\xfb\xfb\x84\xfa\xfa\x41\x04\xe2\x93\xf3\x4b\xf3\x4a\x14\x9c\x3c\xdd\x3d\xfd\x42\x14\xfc\xfc\x43\x14\xfc\x42\x7d\x7c\x14\x5c\x5c\xdd\x1c\x43\x7d\x42\x14\x0c\xac\xb1\x1b\xef\x9a\x97\xc2\x45\xba\xc5\x9e\x7e\x2e\xae\x11\x0a\x1a\x48\x16\x6b\xe2\x36\x1f\x10\x00\x00\xff\xff\x7e\x81\xdd\x4d\xe6\x00\x00\x00")

func migration024_claims_in_channelSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration024_claims_in_channelSql,
		"migration/024_claims_in_channel.sql",
	)
}

func migration024_claims_in_channelSql() (*asset, error) {
	bytes, err := migration024_claims_in_channelSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/024_claims_in_channel.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x24, 0x8c, 0xe0, 0x2b, 0x4c, 0xce, 0x66, 0xde, 0xa4, 0x11, 0x33, 0xd9, 0x6e, 0x13, 0x7d, 0xbe, 0x22, 0x4f, 0x4c, 0x36, 0xbb, 0xb4, 0x1a, 0xad, 0x96, 0xb9, 0x14, 0xae, 0xe0, 0x60, 0xe3}}
	return a, nil
}

var _migration025_outputindicesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\xca\x83\x40\x10\x04\xe0\xfe\x9e\x62\xca\xff\x27\xf1\x09\x52\x9d\x7a\x10\xc1\xa4\xc8\x19\x48\x77\x1c\xb9\x8d\x6e\xe1\x2a\xde\x0a\x3e\x7e\x90\x34\x29\x52\x7e\xc3\x0c\x4c\x51\xe0\x30\x72\xbf\x44\x25\xdc\x67\x63\xbe\xed\x35\x2a\x8d\x24\x5a\x52\xcf\x62\x6c\xdb\xb9\x1b\x3a\x5b\xb6\x0e\xd3\xaa\xf3\xaa\x06\x00\x6c\x5d\xa3\xb9\xd6\xee\x81\x26\x6d\xe1\x32\x25\x7e\x51\xf2\x33\x89\x76\xdb\x39\xe6\x01\x7f\xe3\x9e\x31\xa5\x10\x15\xd6\x57\x47\x70\x0e\x79\x2f\x7c\xa4\x4b\x94\x1c\x9f\xca\x93\x84\x61\x1f\x58\x5f\xfd\x9f\x7e\x3f\x71\x92\xde\x01\x00\x00\xff\xff\xab\xd8\x1e\x48\xb2\x00\x00\x00")

func migration025_outputindicesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration025_outputindicesSql,
		"migration/025_outputindices.sql",
	)
}

func migration025_outputindicesSql() (*asset, error) {
	bytes, err := migration025_outputindicesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/025_outputindices.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0xf3, 0xa2, 0xee, 0x3c, 0x92, 0x26, 0xe8, 0x19, 0x41, 0x52, 0xf7, 0xff, 0x24, 0x82, 0xd4, 0x84, 0xe5, 0xd2, 0x15, 0x3c, 0xab, 0x38, 0xc6, 0xbe, 0xa, 0x76, 0xa9, 0x51, 0x93, 0x41, 0x76}}
	return a, nil
}

var _migration026_purchasesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x4f\x6f\x9c\x3e\x14\xbc\xf3\x29\xde\x2d\xa0\x5f\x22\xe5\x27\x45\x6a\xa5\x6a\x0f\x5e\x78\xbb\xb1\x02\x86\x1a\xd3\x36\xbd\x58\x0e\x38\x8b\xa5\xc5\xa4\x60\xaa\xf6\xdb\x57\xfc\x09\xd9\x28\x89\xa2\x4a\xbd\x61\x3c\x6f\x66\x1e\x33\xe2\xe2\x02\xfe\x6b\xcc\xa1\x53\x4e\x43\xf1\xe0\x79\xa7\xe7\xdc\x29\xa7\x1b\x6d\xdd\x56\x1f\x8c\xf5\x42\x8e\x44\x20\x08\xb2\x8d\x11\x1e\x86\xae\xac\x55\xaf\x3d\xdf\x03\x00\x30\x15\xe4\xc8\x29\x89\xcf\xa7\xa3\xeb\x94\xed\x55\xe9\x4c\x6b\xe5\xdd\x6f\x59\xab\xbe\x96\xa6\x82\x2f\x84\x87\xd7\x84\xfb\x1f\x2e\x03\x18\x1f\x48\x28\x90\x43\x8e\x02\x8e\xca\x19\xfb\x3f\x84\x69\x1c\x8f\x1a\xf3\x51\x1e\xb4\xd5\x9d\x3a\xca\xd2\xcc\xb4\x3f\xdb\xc1\x01\x65\x02\xf7\xc8\xa1\x60\x39\xdd\x33\x8c\x80\xa5\x02\x58\x11\x2f\xd2\xe5\x51\x99\xe6\x54\xec\xea\x85\xd8\xd9\xe0\xee\x3f\x36\x77\x57\x67\xab\xde\xe3\x1b\x39\x58\x53\xb6\x95\x96\xa5\x39\x9b\xe9\x1e\x86\xbb\xa3\xe9\x6b\xdd\x8d\x94\xff\x80\xaf\xd6\xe6\x50\xbf\xbb\x84\x6a\xda\xc1\x3a\xd9\x2b\xd7\xf6\xb5\x81\x2d\xdd\x53\x26\x20\xc2\x1d\x29\x62\x01\x97\x27\xe8\x79\xe7\x4e\x2b\xa7\x2b\x88\x88\x40\x41\x13\x5c\xef\xd7\x91\xb0\xe0\x1c\x99\x90\xe3\x6d\x2e\x48\x92\xcd\x3a\x4d\x5b\x99\x7b\xf3\x77\x93\x90\x32\x28\xb2\x71\xe0\x35\xd6\x89\x36\xe3\x34\x21\xfc\x16\x6e\xf0\x16\xb2\x1b\x99\x2d\x5d\x01\xdf\x54\xc1\x2c\xbc\x4b\x39\xd2\x3d\x9b\x10\xbb\x27\x84\x78\xea\x0d\xf8\xaf\x97\x28\x00\x8e\x3b\xe4\xc8\x42\xcc\x4f\x7b\x06\xfe\x08\x08\x46\x77\x11\xc6\x38\xba\x23\x79\x48\x22\x3c\xf1\xcb\x52\x20\xa1\xa0\x29\x9b\x4d\x14\x8c\x7e\x2e\x70\xf2\x40\xab\x5f\xab\x89\xc2\x9a\x1f\x83\x7e\x4b\xff\x7c\x6a\xe1\xf9\xda\xb3\x65\x21\xca\x22\xfc\xf6\x8c\x26\x1c\x01\xe0\xbf\x8b\x23\x53\xd6\xe0\x3f\xcf\xfc\x6d\xda\x25\x6b\x7f\x09\xfd\x4d\x60\xf2\x98\xad\xff\x98\x72\xe0\x05\x80\x6c\x4f\x19\x6e\xa8\xb5\x6d\xb4\x7d\x0a\xf9\x9a\xf0\x1c\xc5\x66\xa9\xed\xda\xe3\x97\x35\x06\x9e\x7e\x95\xbb\x94\x27\x44\x6c\xc2\x34\xc9\x38\xe6\x39\x46\xe3\x37\x94\xdb\x38\x0d\x6f\x64\x4e\xbf\xe3\xe6\xea\xd3\xeb\x3f\x12\xb4\xd5\x9f\x00\x00\x00\xff\xff\xed\x3b\x2b\x4b\x71\x04\x00\x00")

func migration026_purchasesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration026_purchasesSql,
		"migration/026_purchases.sql",
	)
}

func migration026_purchasesSql() (*asset, error) {
	bytes, err := migration026_purchasesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/026_purchases.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x74, 0x47, 0xce, 0x1e, 0x5d, 0x4, 0x37, 0xf1, 0x72, 0x8b, 0x81, 0x34, 0x66, 0xfa, 0x7b, 0xb9, 0x21, 0x4, 0xf6, 0x9b, 0x79, 0xff, 0x15, 0x79, 0xe4, 0xec, 0x59, 0x73, 0x47, 0x1f, 0x31}}
	return a, nil
}

var _migration027_signed_supportsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x31\xcb\x83\x30\x10\x40\x77\x7f\xc5\x6d\x2a\x1f\xc2\x37\x38\x14\x3a\x9d\x26\xa5\x85\xd4\x82\x26\xa5\x5b\x50\x93\x4a\xa0\x89\x62\x23\xb4\xff\xbe\x38\xb4\x38\x48\x87\x6e\x77\x6f\x78\xf7\x2e\x49\xe0\xcf\x9a\x6e\xac\xbd\x06\x31\x04\xc1\x72\xaf\x7c\xed\xb5\xd5\xce\x67\xba\x33\x2e\x40\xc6\x69\x09\x1c\x33\x46\xe1\x3e\x0d\x43\x3f\x7a\x40\x42\x20\x3f\x31\x71\x2c\xde\x48\x2b\xd9\x3c\x65\x7b\xab\x8d\x95\x46\xc1\x19\xcb\x7c\x8f\x65\x94\xfe\xc7\x30\x0f\x98\xcf\x92\x8a\x72\x08\x27\x7f\xdd\xd8\x26\x0d\x67\x01\x43\x4e\x3f\x44\x4e\xce\xb4\xbd\xd2\xb2\x35\x21\x10\xba\x43\xc1\x38\x14\x82\xb1\xed\x7a\x1e\x75\xea\xa7\xf0\x43\x41\xe8\x05\x8c\x7a\xc8\x65\x3b\x44\xab\x9f\xc4\x5f\x8e\xbf\x02\x00\x00\xff\xff\xd0\x41\xa1\x96\x45\x01\x00\x00")

func migration027_signed_supportsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration027_signed_supportsSql,
		"migration/027_signed_supports.sql",
	)
}

func migration027_signed_supportsSql() (*asset, error) {
	bytes, err := migration027_signed_supportsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/027_signed_supports.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9f, 0xda, 0xcc, 0x8b, 0x96, 0x7b, 0x4e, 0xe6, 0xc5, 0xf8, 0x10, 0x13, 0xa1, 0xa3, 0xc9, 0xe0, 0x45, 0xdd, 0xe9, 0x8e, 0x50, 0x5f, 0xf4, 0xb7, 0x6e, 0xdd, 0xef, 0xdd, 0x93, 0x19, 0x8c, 0xaa}}
	return a, nil
}

var _migration028_liscense_urlSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xc1\x0a\x82\x40\x10\xc6\xf1\xbb\x4f\x31\x37\x8b\xf0\x12\x08\x41\xa7\x71\x9b\xf2\x30\x19\xac\xbb\x5d\x45\xd6\x49\x16\x74\x0b\x5b\xdf\x3f\xac\x4b\x41\xb7\xf9\x1d\xe6\xcf\x97\x65\xb0\x19\x7d\x3f\xb5\x51\xc0\x3e\x92\xe4\xdb\x75\x6c\xa3\x8c\x12\x62\x21\xbd\x0f\x09\xb2\x21\x0d\x06\x0b\x26\x70\x43\xeb\x47\x50\x25\x56\x27\x02\x75\x61\x7b\xae\x60\xf0\x4e\xc2\x53\x9a\x79\x1a\x7e\xee\x2b\x6a\x55\xa2\x5e\x6d\xf3\x7c\xbd\xbc\x68\x54\x4b\xa8\x26\x03\xe9\x1c\x6f\xbb\x74\x09\x30\x1a\xfa\xb0\x99\x83\x77\xf7\x4e\x1a\xe7\x53\xa8\x2c\x33\x1c\xe8\x88\x96\xcd\x1b\xfb\xff\x0b\x29\x74\xaf\x00\x00\x00\xff\xff\x1c\x65\xae\xed\xca\x00\x00\x00")

func migration028_liscense_urlSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration028_liscense_urlSql,
		"migration/028_liscense_url.sql",
	)
}

func migration028_liscense_urlSql() (*asset, error) {
	bytes, err := migration028_liscense_urlSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/028_liscense_url.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0xa5, 0xe1, 0xde, 0xd7, 0xf7, 0x27, 0x18, 0xe4, 0x18, 0x4c, 0xc1, 0x4f, 0x50, 0xc4, 0xa2, 0xc4, 0x7f, 0x16, 0xe3, 0x5e, 0xb, 0xfa, 0xee, 0x2a, 0x94, 0x51, 0x2a, 0xdf, 0x87, 0xbe, 0x51}}
	return a, nil
}

var _migration029_support_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x42\xe6\x07\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x39\x07\xb9\x3a\x86\xb8\x2a\x78\xfa\xb9\xb8\x46\x28\x64\xa6\x54\xc4\x17\x97\x16\x14\xe4\x17\x95\xc4\xe7\xe6\xa7\x64\xa6\x65\xa6\xa6\xc4\x27\x96\x28\xf8\xfb\x29\x40\x85\x15\x34\x90\xc4\x35\xad\xb1\x9b\xec\x9a\x97\x02\x08\x00\x00\xff\xff\x8d\xb3\xd3\x37\x82\x00\x00\x00")

func migration029_support_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration029_support_indexSql,
		"migration/029_support_index.sql",
	)
}

func migration029_support_indexSql() (*asset, error) {
	bytes, err := migration029_support_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/029_support_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x96, 0x9d, 0x83, 0xf8, 0x57, 0xb4, 0x55, 0x4b, 0x9d, 0x3d, 0x21, 0xa9, 0xc6, 0x22, 0xae, 0x9f, 0x3c, 0x56, 0x47, 0x8a, 0xe0, 0x25, 0x2f, 0xc4, 0xb9, 0xa8, 0xcd, 0xd8, 0x56, 0x8f, 0x5e}}
	return a, nil
}

var _migration030_json_fieldSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x42\xe6\x07\x97\x24\x96\xa4\xe6\xa6\xe6\x95\x38\xa5\xa6\x67\xe6\x71\x25\xe6\x94\xa4\x16\x29\x94\x24\x26\xe5\xa4\x2a\x24\xe7\x24\x66\xe6\x2a\xe4\xe6\xa7\x64\xa6\x55\x2a\x94\x25\xe6\x94\xa6\xc6\x27\x16\xc7\x67\x15\xe7\xe7\x29\x78\x05\xfb\xfb\x29\xe4\x95\xe6\xe4\x58\x63\x37\xcc\x35\x2f\x05\x10\x00\x00\xff\xff\x24\xb6\x3b\x55\x75\x00\x00\x00")

func migration030_json_fieldSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration030_json_fieldSql,
		"migration/030_json_field.sql",
	)
}

func migration030_json_fieldSql() (*asset, error) {
	bytes, err := migration030_json_fieldSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/030_json_field.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x65, 0xa7, 0xe6, 0x52, 0xe8, 0x68, 0x2c, 0x21, 0x6b, 0x1b, 0x48, 0xd7, 0x50, 0x7a, 0x5c, 0xfc, 0x69, 0x48, 0xc8, 0xd8, 0xc5, 0x53, 0x84, 0x3e, 0x94, 0x1c, 0x9, 0xc0, 0xd2, 0xe1, 0xad, 0x9e}}
	return a, nil
}

var _migration031_drop_unused_columnsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x92\xcf\x4a\x03\x31\x10\xc6\xef\x7d\x8a\xb9\x55\x91\x82\x05\x6f\xe2\x45\xf0\x09\xc4\xf3\x36\x4d\xbe\x6e\x07\x66\x27\xcb\x64\xd2\xa5\x6f\x2f\xab\xf8\xa7\x22\x1e\x4a\xe3\x31\x93\xf0\xfb\xe6\x37\x99\xd5\x8a\x6e\x06\xee\x2d\x38\xe8\x65\x5c\x7c\x3f\x3e\x7b\x70\x0c\x50\x7f\x44\xcf\xba\x08\xe2\x30\xf2\xb0\x15\x50\x94\xc0\x03\x25\xcb\x23\xc5\x2c\x75\x50\x9a\xb0\x2d\xec\xe8\xaa\xc9\xfd\xef\x94\x27\x4d\xe7\xe3\x63\xae\xea\x76\x6c\x81\x2e\xf3\xe3\x26\x3d\xb3\x37\x69\x78\x13\x73\xc2\xa6\x05\x59\x82\xb3\xd7\xd4\x64\x1a\x92\xb5\x6f\x07\xe7\x08\x2d\xcd\xb6\x6f\x34\x1c\x18\x53\x0b\x74\x2e\x97\xa2\x0e\x39\xf1\xee\x48\x3b\xa0\x0b\x29\x19\x4a\xa1\x43\xb0\xb8\x0f\x76\x75\x77\x7b\x3d\xe7\xc9\xcc\x99\xff\x58\xd7\x5d\x0f\x85\x05\xe9\x22\x93\x56\x39\x73\x6a\x75\x4c\x73\xf5\x3d\xbf\xc0\x4f\xc2\x1f\xde\xc0\x34\xed\x61\xf8\x71\xb1\x5c\x5e\x58\xfa\x00\x2b\x9c\xf5\x53\x78\xfd\x5f\xc2\x1f\xc1\x27\xb2\x5f\xc5\xbf\x44\x5f\x03\x00\x00\xff\xff\x1e\x08\x88\xb7\x7a\x05\x00\x00")

func migration031_drop_unused_columnsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migration031_drop_unused_columnsSql,
		"migration/031_drop_unused_columns.sql",
	)
}

func migration031_drop_unused_columnsSql() (*asset, error) {
	bytes, err := migration031_drop_unused_columnsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migration/031_drop_unused_columns.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x33, 0x1c, 0x9f, 0x1c, 0x81, 0x2f, 0x23, 0x94, 0x6, 0x50, 0xde, 0x94, 0xce, 0x91, 0xf9, 0xe3, 0x9e, 0x19, 0x35, 0x84, 0xa3, 0xc9, 0x65, 0x7d, 0x9f, 0x3c, 0xc, 0x62, 0x71, 0xd3, 0xfc, 0xc}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migration/000_init_schema.sql":                   migration000_init_schemaSql,
	"migration/001_supports.sql":                      migration001_supportsSql,
	"migration/002_decimals.sql":                      migration002_decimalsSql,
	"migration/003_dht_tracking.sql":                  migration003_dht_trackingSql,
	"migration/004_new_indices.sql":                   migration004_new_indicesSql,
	"migration/005_remove_foreign_keys.sql":           migration005_remove_foreign_keysSql,
	"migration/006_add_height_index.sql":              migration006_add_height_indexSql,
	"migration/007_more_decimals.sql":                 migration007_more_decimalsSql,
	"migration/008_schema_fix.sql":                    migration008_schema_fixSql,
	"migration/009_certificate_validation.sql":        migration009_certificate_validationSql,
	"migration/010_triggers.sql":                      migration010_triggersSql,
	"migration/011_add_license.sql":                   migration011_add_licenseSql,
	"migration/012_store_last_height.sql":             migration012_store_last_heightSql,
	"migration/013_add_input_vin.sql":                 migration013_add_input_vinSql,
	"migration/014_yay_new_metadata.sql":              migration014_yay_new_metadataSql,
	"migration/015_adjust_column_sizes.sql":           migration015_adjust_column_sizesSql,
	"migration/016_transaction_hashes_adjustment.sql": migration016_transaction_hashes_adjustmentSql,
	"migration/017_claim_owner.sql":                   migration017_claim_ownerSql,
	"migration/018_cert_sync_index.sql":               migration018_cert_sync_indexSql,
	"migration/019_raw_tx.sql":                        migration019_raw_txSql,
	"migration/020_content_type.sql":                  migration020_content_typeSql,
	"migration/021_claim_reference.sql":               migration021_claim_referenceSql,
	"migration/022_align_claim_id.sql":                migration022_align_claim_idSql,
	"migration/023_sdhash_index.sql":                  migration023_sdhash_indexSql,
	"migration/024_claims_in_channel.sql":             migration024_claims_in_channelSql,
	"migration/025_outputindices.sql":                 migration025_outputindicesSql,
	"migration/026_purchases.sql":                     migration026_purchasesSql,
	"migration/027_signed_supports.sql":               migration027_signed_supportsSql,
	"migration/028_liscense_url.sql":                  migration028_liscense_urlSql,
	"migration/029_support_index.sql":                 migration029_support_indexSql,
	"migration/030_json_field.sql":                    migration030_json_fieldSql,
	"migration/031_drop_unused_columns.sql":           migration031_drop_unused_columnsSql,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migration": {nil, map[string]*bintree{
		"000_init_schema.sql":                   {migration000_init_schemaSql, map[string]*bintree{}},
		"001_supports.sql":                      {migration001_supportsSql, map[string]*bintree{}},
		"002_decimals.sql":                      {migration002_decimalsSql, map[string]*bintree{}},
		"003_dht_tracking.sql":                  {migration003_dht_trackingSql, map[string]*bintree{}},
		"004_new_indices.sql":                   {migration004_new_indicesSql, map[string]*bintree{}},
		"005_remove_foreign_keys.sql":           {migration005_remove_foreign_keysSql, map[string]*bintree{}},
		"006_add_height_index.sql":              {migration006_add_height_indexSql, map[string]*bintree{}},
		"007_more_decimals.sql":                 {migration007_more_decimalsSql, map[string]*bintree{}},
		"008_schema_fix.sql":                    {migration008_schema_fixSql, map[string]*bintree{}},
		"009_certificate_validation.sql":        {migration009_certificate_validationSql, map[string]*bintree{}},
		"010_triggers.sql":                      {migration010_triggersSql, map[string]*bintree{}},
		"011_add_license.sql":                   {migration011_add_licenseSql, map[string]*bintree{}},
		"012_store_last_height.sql":             {migration012_store_last_heightSql, map[string]*bintree{}},
		"013_add_input_vin.sql":                 {migration013_add_input_vinSql, map[string]*bintree{}},
		"014_yay_new_metadata.sql":              {migration014_yay_new_metadataSql, map[string]*bintree{}},
		"015_adjust_column_sizes.sql":           {migration015_adjust_column_sizesSql, map[string]*bintree{}},
		"016_transaction_hashes_adjustment.sql": {migration016_transaction_hashes_adjustmentSql, map[string]*bintree{}},
		"017_claim_owner.sql":                   {migration017_claim_ownerSql, map[string]*bintree{}},
		"018_cert_sync_index.sql":               {migration018_cert_sync_indexSql, map[string]*bintree{}},
		"019_raw_tx.sql":                        {migration019_raw_txSql, map[string]*bintree{}},
		"020_content_type.sql":                  {migration020_content_typeSql, map[string]*bintree{}},
		"021_claim_reference.sql":               {migration021_claim_referenceSql, map[string]*bintree{}},
		"022_align_claim_id.sql":                {migration022_align_claim_idSql, map[string]*bintree{}},
		"023_sdhash_index.sql":                  {migration023_sdhash_indexSql, map[string]*bintree{}},
		"024_claims_in_channel.sql":             {migration024_claims_in_channelSql, map[string]*bintree{}},
		"025_outputindices.sql":                 {migration025_outputindicesSql, map[string]*bintree{}},
		"026_purchases.sql":                     {migration026_purchasesSql, map[string]*bintree{}},
		"027_signed_supports.sql":               {migration027_signed_supportsSql, map[string]*bintree{}},
		"028_liscense_url.sql":                  {migration028_liscense_urlSql, map[string]*bintree{}},
		"029_support_index.sql":                 {migration029_support_indexSql, map[string]*bintree{}},
		"030_json_field.sql":                    {migration030_json_fieldSql, map[string]*bintree{}},
		"031_drop_unused_columns.sql":           {migration031_drop_unused_columnsSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
